collected_code_3/problem-827-1.c: In function 'main':
collected_code_3/problem-827-1.c:14:28: warning: implicit declaration of function 'malloc' [-Wimplicit-function-declaration]
   14 |     int **matrix = (int **)malloc(rows * sizeof(int *));
      |                            ^~~~~~
collected_code_3/problem-827-1.c:2:1: note: include '<stdlib.h>' or provide a declaration of 'malloc'
    1 | #include <stdio.h>
  +++ |+#include <stdlib.h>
    2 | 
collected_code_3/problem-827-1.c:14:28: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
   14 |     int **matrix = (int **)malloc(rows * sizeof(int *));
      |                            ^~~~~~
collected_code_3/problem-827-1.c:14:28: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code_3/problem-827-1.c:28:9: warning: implicit declaration of function 'free' [-Wimplicit-function-declaration]
   28 |         free(matrix[i]);
      |         ^~~~
collected_code_3/problem-827-1.c:28:9: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code_3/problem-827-1.c:28:9: warning: incompatible implicit declaration of built-in function 'free' [-Wbuiltin-declaration-mismatch]
collected_code_3/problem-827-1.c:28:9: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code_3/problem-827-1.c:30:5: warning: incompatible implicit declaration of built-in function 'free' [-Wbuiltin-declaration-mismatch]
   30 |     free(matrix);
      |     ^~~~
collected_code_3/problem-827-1.c:30:5: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code_3/problem-827-1.c:16:19: warning: dereference of possibly-NULL 'matrix' [CWE-690] [-Wanalyzer-possible-null-dereference]
   16 |         matrix[i] = (int *)malloc(cols * sizeof(int));
      |         ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-4
    |
    |   14 |     int **matrix = (int **)malloc(rows * sizeof(int *));
    |      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                            |
    |      |                            (1) this call could return NULL
    |   15 |     for (int i = 0; i < rows; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < rows')...
    |   16 |         matrix[i] = (int *)malloc(cols * sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                   |        |
    |      |                   |        (3) ...to here
    |      |                   (4) 'matrix + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-827-1.c:19:18: warning: dereference of possibly-NULL '*matrix' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |     matrix[0][0] = 1; matrix[0][1] = 2; matrix[0][2] = 3;
      |     ~~~~~~~~~~~~~^~~
  'main': events 1-10
    |
    |   15 |     for (int i = 0; i < rows; i++) {
    |      |                     ~~^~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < rows')...
    |      |                       (4) following 'true' branch (when 'i < rows')...
    |      |                       (6) following 'true' branch (when 'i < rows')...
    |      |                       (8) following 'false' branch (when 'i >= rows')...
    |   16 |         matrix[i] = (int *)malloc(cols * sizeof(int));
    |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                            |
    |      |                            (2) ...to here
    |      |                            (3) this call could return NULL
    |      |                            (5) ...to here
    |      |                            (7) ...to here
    |......
    |   19 |     matrix[0][0] = 1; matrix[0][1] = 2; matrix[0][2] = 3;
    |      |     ~~~~~~~~~~~~~~~~   
    |      |           |      |
    |      |           |      (10) '*matrix' could be NULL: unchecked value from (3)
    |      |           (9) ...to here
    |
collected_code_3/problem-827-1.c:20:18: warning: dereference of possibly-NULL '*matrix_42 + 8' [CWE-690] [-Wanalyzer-possible-null-dereference]
   20 |     matrix[1][0] = 4; matrix[1][1] = 5; matrix[1][2] = 6;
      |     ~~~~~~~~~~~~~^~~
  'main': events 1-10
    |
    |   15 |     for (int i = 0; i < rows; i++) {
    |      |                     ~~^~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < rows')...
    |      |                       (3) following 'true' branch (when 'i < rows')...
    |      |                       (6) following 'true' branch (when 'i < rows')...
    |      |                       (8) following 'false' branch (when 'i >= rows')...
    |   16 |         matrix[i] = (int *)malloc(cols * sizeof(int));
    |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                            |
    |      |                            (2) ...to here
    |      |                            (4) ...to here
    |      |                            (5) this call could return NULL
    |      |                            (7) ...to here
    |......
    |   19 |     matrix[0][0] = 1; matrix[0][1] = 2; matrix[0][2] = 3;
    |      |     ~~~~~~~~~          
    |      |           |
    |      |           (9) ...to here
    |   20 |     matrix[1][0] = 4; matrix[1][1] = 5; matrix[1][2] = 6;
    |      |     ~~~~~~~~~~~~~~~~   
    |      |                  |
    |      |                  (10) '*matrix_42 + 8' could be NULL: unchecked value from (5)
    |
collected_code_3/problem-827-1.c:21:18: warning: dereference of possibly-NULL '*matrix_42 + 16' [CWE-690] [-Wanalyzer-possible-null-dereference]
   21 |     matrix[2][0] = 7; matrix[2][1] = 8; matrix[2][2] = 9;
      |     ~~~~~~~~~~~~~^~~
  'main': events 1-10
    |
    |   15 |     for (int i = 0; i < rows; i++) {
    |      |                     ~~^~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < rows')...
    |      |                       (3) following 'true' branch (when 'i < rows')...
    |      |                       (5) following 'true' branch (when 'i < rows')...
    |      |                       (8) following 'false' branch (when 'i >= rows')...
    |   16 |         matrix[i] = (int *)malloc(cols * sizeof(int));
    |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                            |
    |      |                            (2) ...to here
    |      |                            (4) ...to here
    |      |                            (6) ...to here
    |      |                            (7) this call could return NULL
    |......
    |   19 |     matrix[0][0] = 1; matrix[0][1] = 2; matrix[0][2] = 3;
    |      |     ~~~~~~~~~          
    |      |           |
    |      |           (9) ...to here
    |   20 |     matrix[1][0] = 4; matrix[1][1] = 5; matrix[1][2] = 6;
    |   21 |     matrix[2][0] = 7; matrix[2][1] = 8; matrix[2][2] = 9;
    |      |     ~~~~~~~~~~~~~~~~   
    |      |                  |
    |      |                  (10) '*matrix_42 + 16' could be NULL: unchecked value from (7)
    |
