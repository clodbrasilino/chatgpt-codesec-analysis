collected_code_3/problem-391-3.c: In function 'createNode':
collected_code_3/problem-391-3.c:13:18: warning: dereference of possibly-NULL 'newNode' [CWE-690] [-Wanalyzer-possible-null-dereference]
   13 |     newNode->key = key;
      |     ~~~~~~~~~~~~~^~~~~
  'createNode': events 1-2
    |
    |   12 |     Node* newNode = (Node*)malloc(sizeof(Node));
    |      |                            ^~~~~~~~~~~~~~~~~~~~
    |      |                            |
    |      |                            (1) this call could return NULL
    |   13 |     newNode->key = key;
    |      |     ~~~~~~~~~~~~~~~~~~      
    |      |                  |
    |      |                  (2) 'newNode' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-391-3.c: In function 'convertListToDict':
collected_code_3/problem-391-3.c:24:20: warning: dereference of NULL 'values' [CWE-476] [-Wanalyzer-null-dereference]
   24 |             head = createNode(keys[i], values[i]);
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   48 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   49 |     Node* innerDict1 = convertListToDict((char*[]){"key1", "key2", NULL}, NULL, 2);
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (2) calling 'convertListToDict' from 'main'
    |
    +--> 'convertListToDict': events 3-9
           |
           |   19 | Node* convertListToDict(char** keys, Node** values, int size) {
           |      |       ^~~~~~~~~~~~~~~~~
           |      |       |
           |      |       (3) entry to 'convertListToDict'
           |......
           |   22 |     for(int i = 0; i < size; i++) {
           |      |                    ~~~~~~~~
           |      |                      |
           |      |                      (4) following 'true' branch (when 'i < size')...
           |   23 |         if(head == NULL) {
           |      |           ~
           |      |           |
           |      |           (5) ...to here
           |      |           (6) following 'true' branch (when 'head' is NULL)...
           |   24 |             head = createNode(keys[i], values[i]);
           |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |                         |
           |      |                    |                         (7) ...to here
           |      |                    |                         (8) 'values' is NULL
           |      |                    (9) dereference of NULL 'values + (long unsigned int)i * 8'
           |
