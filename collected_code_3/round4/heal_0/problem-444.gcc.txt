collected_code_3/round4/heal_0/problem-444.c: In function 'trimTuple':
collected_code_3/round4/heal_0/problem-444.c:15:19: warning: dereference of possibly-NULL 'trimmed' [CWE-690] [-Wanalyzer-possible-null-dereference]
   15 |     trimmed->size = tuple->size - k;
      |     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
  'trimTuple': events 1-4
    |
    |   10 |     if (k >= tuple->size) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |   14 |     Tuple* trimmed = (Tuple*)malloc(sizeof(Tuple));
    |      |                              ~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (2) ...to here
    |      |                              (3) this call could return NULL
    |   15 |     trimmed->size = tuple->size - k;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (4) 'trimmed' could be NULL: unchecked value from (3)
    |
collected_code_3/round4/heal_0/problem-444.c:19:26: warning: dereference of possibly-NULL '*trimmed.data + (long unsigned int)i * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |         trimmed->data[i] = tuple->data[i];
      |         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
  'trimTuple': events 1-6
    |
    |   10 |     if (k >= tuple->size) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |   14 |     Tuple* trimmed = (Tuple*)malloc(sizeof(Tuple));
    |      |                              ~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (2) ...to here
    |   15 |     trimmed->size = tuple->size - k;
    |   16 |     trimmed->data = (int*)malloc(trimmed->size * sizeof(int));
    |      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (3) this call could return NULL
    |   17 | 
    |   18 |     for (int i = 0; i < trimmed->size; i++) {
    |      |                     ~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (4) following 'true' branch...
    |   19 |         trimmed->data[i] = tuple->data[i];
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                          |      |
    |      |                          |      (5) ...to here
    |      |                          (6) '*trimmed.data + (long unsigned int)i * 4' could be NULL: unchecked value from (3)
    |
collected_code_3/round4/heal_0/problem-444.c: In function 'main':
collected_code_3/round4/heal_0/problem-444.c:33:23: warning: dereference of possibly-NULL 'tuple.data' [CWE-690] [-Wanalyzer-possible-null-dereference]
   33 |         tuple.data[i] = i + 1;
      |         ~~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   30 |     tuple.data = (int*)malloc(size * sizeof(int));
    |      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (1) this call could return NULL
    |   31 | 
    |   32 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < size')...
    |   33 |         tuple.data[i] = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~~
    |      |              |        |
    |      |              |        (4) 'tuple.data + (long unsigned int)i * 4' could be NULL: unchecked value from (1)
    |      |              (3) ...to here
    |
