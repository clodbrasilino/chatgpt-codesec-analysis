collected_code_3/problem-147-1.c: In function 'findMaxTotal':
collected_code_3/problem-147-1.c:12:20: warning: use of uninitialized value '*triangle' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   12 |     return triangle[0][0];
      |            ~~~~~~~~^~~
  'main': events 1-5
    |
    |   15 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   18 |     int **triangle = (int **)malloc(n * sizeof(int *));
    |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (2) region created on heap here
    |   19 |     for (int i = 0; i < n; ++i) {
    |      |                     ~~~~~
    |      |                       |
    |      |                       (3) following 'false' branch...
    |......
    |   25 |     printf("%d\n", findMaxTotal(triangle, n));
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (4) ...to here
    |      |     (5) calling 'findMaxTotal' from 'main'
    |
    +--> 'findMaxTotal': events 6-9
           |
           |    6 | int findMaxTotal(int **triangle, int n) {
           |      |     ^~~~~~~~~~~~
           |      |     |
           |      |     (6) entry to 'findMaxTotal'
           |    7 |     for (int i = n - 2; i >= 0; --i) {
           |      |                         ~~~~~~
           |      |                           |
           |      |                           (7) following 'false' branch (when 'i < 0')...
           |......
           |   12 |     return triangle[0][0];
           |      |            ~~~~~~~~~~~
           |      |                    |
           |      |                    (8) ...to here
           |      |                    (9) use of uninitialized value '*triangle' here
           |
collected_code_3/problem-147-1.c:12:20: warning: dereference of possibly-NULL 'triangle' [CWE-690] [-Wanalyzer-possible-null-dereference]
   12 |     return triangle[0][0];
      |            ~~~~~~~~^~~
  'main': events 1-5
    |
    |   15 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   18 |     int **triangle = (int **)malloc(n * sizeof(int *));
    |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (2) this call could return NULL
    |   19 |     for (int i = 0; i < n; ++i) {
    |      |                     ~~~~~
    |      |                       |
    |      |                       (3) following 'false' branch...
    |......
    |   25 |     printf("%d\n", findMaxTotal(triangle, n));
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (4) ...to here
    |      |     (5) calling 'findMaxTotal' from 'main'
    |
    +--> 'findMaxTotal': events 6-9
           |
           |    6 | int findMaxTotal(int **triangle, int n) {
           |      |     ^~~~~~~~~~~~
           |      |     |
           |      |     (6) entry to 'findMaxTotal'
           |    7 |     for (int i = n - 2; i >= 0; --i) {
           |      |                         ~~~~~~
           |      |                           |
           |      |                           (7) following 'false' branch (when 'i < 0')...
           |......
           |   12 |     return triangle[0][0];
           |      |            ~~~~~~~~~~~
           |      |                    |
           |      |                    (8) ...to here
           |      |                    (9) 'triangle' could be NULL: unchecked value from (2)
           |
collected_code_3/problem-147-1.c: In function 'main':
collected_code_3/problem-147-1.c:20:21: warning: dereference of possibly-NULL 'triangle' [CWE-690] [-Wanalyzer-possible-null-dereference]
   20 |         triangle[i] = (int *)malloc((i + 1) * sizeof(int));
      |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-4
    |
    |   18 |     int **triangle = (int **)malloc(n * sizeof(int *));
    |      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (1) this call could return NULL
    |   19 |     for (int i = 0; i < n; ++i) {
    |      |                     ~~~~~     
    |      |                       |
    |      |                       (2) following 'true' branch...
    |   20 |         triangle[i] = (int *)malloc((i + 1) * sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |                  |
    |      |                     |                  (3) ...to here
    |      |                     (4) 'triangle + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
