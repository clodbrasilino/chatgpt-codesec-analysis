collected_code/healed/problem-247.c: In function 'longestPalindromicSubsequence':
collected_code/healed/problem-247.c:19:14: warning: dereference of possibly-NULL 'L' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |         L[i] = (int *)malloc(n * sizeof(int));
      |         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'longestPalindromicSubsequence': events 1-6
    |
    |   10 |     if(str == NULL) {
    |      |       ^
    |      |       |
    |      |       (1) following 'false' branch (when 'str' is non-NULL)...
    |......
    |   14 |     int n = strlen(str);
    |      |             ~~~~~~~~~~~
    |      |             |
    |      |             (2) ...to here
    |   15 |     int i, j, cl;
    |   16 |     int **L = (int **)malloc(n * sizeof(int *));
    |      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (3) this call could return NULL
    |   17 | 
    |   18 |     for (i = 0; i < n; i++) {
    |      |                 ~~~~~
    |      |                   |
    |      |                   (4) following 'true' branch (when 'i < n')...
    |   19 |         L[i] = (int *)malloc(n * sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |              |        |
    |      |              |        (5) ...to here
    |      |              (6) 'L + (long unsigned int)i * 8' could be NULL: unchecked value from (3)
    |
collected_code/healed/problem-247.c:20:17: warning: dereference of possibly-NULL '*L_106 + _11 + (long unsigned int)i * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   20 |         L[i][i] = 1;
      |         ~~~~~~~~^~~
  'longestPalindromicSubsequence': events 1-6
    |
    |   10 |     if(str == NULL) {
    |      |       ^
    |      |       |
    |      |       (1) following 'false' branch (when 'str' is non-NULL)...
    |......
    |   14 |     int n = strlen(str);
    |      |             ~~~~~~~~~~~
    |      |             |
    |      |             (2) ...to here
    |......
    |   18 |     for (i = 0; i < n; i++) {
    |      |                 ~~~~~
    |      |                   |
    |      |                   (3) following 'true' branch (when 'i < n')...
    |   19 |         L[i] = (int *)malloc(n * sizeof(int));
    |      |                       ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (4) ...to here
    |      |                       (5) this call could return NULL
    |   20 |         L[i][i] = 1;
    |      |         ~~~~~~~~~~~
    |      |                 |
    |      |                 (6) '*L_106 + _11 + (long unsigned int)i * 4' could be NULL: unchecked value from (5)
    |
collected_code/healed/problem-247.c:36:16: warning: use of uninitialized value '*L' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   36 |     int res = L[0][n - 1];
      |               ~^~~
  'main': events 1-2
    |
    |   44 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   45 |     char str[] = "ABCBDEFGCDCFEDGHIJKL";
    |   46 |     int length = longestPalindromicSubsequence(str);
    |      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (2) calling 'longestPalindromicSubsequence' from 'main'
    |
    +--> 'longestPalindromicSubsequence': events 3-11
           |
           |    9 | int longestPalindromicSubsequence(const char* str) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'longestPalindromicSubsequence'
           |   10 |     if(str == NULL) {
           |      |       ~
           |      |       |
           |      |       (4) following 'false' branch (when 'str' is non-NULL)...
           |......
           |   14 |     int n = strlen(str);
           |      |             ~~~~~~~~~~~
           |      |             |
           |      |             (5) ...to here
           |   15 |     int i, j, cl;
           |   16 |     int **L = (int **)malloc(n * sizeof(int *));
           |      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (6) region created on heap here
           |   17 | 
           |   18 |     for (i = 0; i < n; i++) {
           |      |                 ~~~~~
           |      |                   |
           |      |                   (7) following 'false' branch (when 'i >= n')...
           |......
           |   23 |     for (cl = 2; cl <= n; cl++) {
           |      |          ~~~~~~  ~~~~~~~
           |      |             |       |
           |      |             |       (9) following 'false' branch (when 'cl > n')...
           |      |             (8) ...to here
           |......
           |   36 |     int res = L[0][n - 1];
           |      |               ~~~~
           |      |                |
           |      |                (10) ...to here
           |      |                (11) use of uninitialized value '*L' here
           |
collected_code/healed/problem-247.c:36:16: warning: dereference of possibly-NULL 'L' [CWE-690] [-Wanalyzer-possible-null-dereference]
   36 |     int res = L[0][n - 1];
      |               ~^~~
  'main': events 1-2
    |
    |   44 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   45 |     char str[] = "ABCBDEFGCDCFEDGHIJKL";
    |   46 |     int length = longestPalindromicSubsequence(str);
    |      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (2) calling 'longestPalindromicSubsequence' from 'main'
    |
    +--> 'longestPalindromicSubsequence': events 3-11
           |
           |    9 | int longestPalindromicSubsequence(const char* str) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'longestPalindromicSubsequence'
           |   10 |     if(str == NULL) {
           |      |       ~
           |      |       |
           |      |       (4) following 'false' branch (when 'str' is non-NULL)...
           |......
           |   14 |     int n = strlen(str);
           |      |             ~~~~~~~~~~~
           |      |             |
           |      |             (5) ...to here
           |   15 |     int i, j, cl;
           |   16 |     int **L = (int **)malloc(n * sizeof(int *));
           |      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (6) this call could return NULL
           |   17 | 
           |   18 |     for (i = 0; i < n; i++) {
           |      |                 ~~~~~
           |      |                   |
           |      |                   (7) following 'false' branch (when 'i >= n')...
           |......
           |   23 |     for (cl = 2; cl <= n; cl++) {
           |      |          ~~~~~~  ~~~~~~~
           |      |             |       |
           |      |             |       (9) following 'false' branch (when 'cl > n')...
           |      |             (8) ...to here
           |......
           |   36 |     int res = L[0][n - 1];
           |      |               ~~~~
           |      |                |
           |      |                (10) ...to here
           |      |                (11) 'L' could be NULL: unchecked value from (6)
           |
-macosx_version_min has been renamed to -macos_version_min
