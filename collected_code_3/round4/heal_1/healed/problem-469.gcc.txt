./collected_code_3/round4/heal_1/healed/problem-469.c: In function 'maxProfit':
./collected_code_3/round4/heal_1/healed/problem-469.c:41:11: warning: use of uninitialized value '*dp' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   41 |         dp[0][j] = 0;
      |         ~~^~~
  'maxProfit': events 1-14
    |
    |    5 |     if (k == 0 || n == 0) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |    9 |     if (k > n / 2) {
    |      |        ~    ~~~~~
    |      |        |      |
    |      |        |      (2) ...to here
    |      |        (3) following 'false' branch...
    |......
    |   19 |     int **dp = (int **)malloc((k + 1) * sizeof(int *));
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |         |
    |      |                        |         (4) ...to here
    |      |                        (5) region created on heap here
    |   20 |     if (dp == NULL) {
    |      |        ~
    |      |        |
    |      |        (6) following 'false' branch (when 'dp' is non-NULL)...
    |......
    |   24 |     for (int i = 0; i <= k; i++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (8) following 'false' branch (when 'i > k')...
    |      |              (7) ...to here
    |......
    |   36 |     for (int i = 0; i <= k; i++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (10) following 'false' branch (when 'i > k')...
    |      |              (9) ...to here
    |......
    |   40 |     for (int j = 0; j <= n; j++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (12) following 'true' branch (when 'j <= n')...
    |      |              (11) ...to here
    |   41 |         dp[0][j] = 0;
    |      |         ~~~~~
    |      |           |
    |      |           (13) ...to here
    |      |           (14) use of uninitialized value '*dp' here
    |
./collected_code_3/round4/heal_1/healed/problem-469.c:47:29: warning: use of uninitialized value '*_56 + _59' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   47 |             dp[i][j] = dp[i][j - 1] > (prices[j] + maxDiff) ? dp[i][j - 1] : (prices[j] + maxDiff);
      |                        ~~~~~^~~~~~~
  'main': events 1-2
    |
    |   62 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   66 |     int profit = maxProfit(k, n, prices);
    |      |                  ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (2) calling 'maxProfit' from 'main'
    |
    +--> 'maxProfit': events 3-35
           |
           |    4 | int maxProfit(int k, int n, int prices[]) {
           |      |     ^~~~~~~~~
           |      |     |
           |      |     (3) entry to 'maxProfit'
           |    5 |     if (k == 0 || n == 0) {
           |      |        ~
           |      |        |
           |      |        (4) following 'false' branch...
           |......
           |    9 |     if (k > n / 2) {
           |      |        ~    ~~~~~
           |      |        |      |
           |      |        |      (5) ...to here
           |      |        (6) following 'false' branch...
           |......
           |   19 |     int **dp = (int **)malloc((k + 1) * sizeof(int *));
           |      |                               ~~~~~~~
           |      |                                  |
           |      |                                  (7) ...to here
           |   20 |     if (dp == NULL) {
           |      |        ~
           |      |        |
           |      |        (8) following 'false' branch (when 'dp' is non-NULL)...
           |......
           |   24 |     for (int i = 0; i <= k; i++) {
           |      |              ~      ~~~~~~  ~~~
           |      |              |        |      |
           |      |              |        |      (13) ...to here
           |      |              |        |      (18) ...to here
           |      |              |        |      (22) ...to here
           |      |              |        (10) following 'true' branch (when 'i <= k')...
           |      |              |        (14) following 'true' branch (when 'i <= k')...
           |      |              |        (19) following 'true' branch (when 'i <= k')...
           |      |              |        (23) following 'false' branch (when 'i > k')...
           |      |              (9) ...to here
           |   25 |         dp[i] = (int *)malloc((n + 1) * sizeof(int));
           |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                        |         |
           |      |                        |         (11) ...to here
           |      |                        |         (15) ...to here
           |      |                        |         (20) ...to here
           |      |                        (16) region created on heap here
           |   26 |         if (dp[i] == NULL) {
           |      |            ~
           |      |            |
           |      |            (12) following 'false' branch...
           |      |            (17) following 'false' branch...
           |      |            (21) following 'false' branch...
           |......
           |   36 |     for (int i = 0; i <= k; i++) {
           |      |              ~      ~~~~~~
           |      |              |        |
           |      |              |        (25) following 'true' branch (when 'i <= k')...
           |      |              |        (27) following 'false' branch (when 'i > k')...
           |      |              (24) ...to here
           |   37 |         dp[i][0] = 0;
           |      |           ~
           |      |           |
           |      |           (26) ...to here
           |......
           |   40 |     for (int j = 0; j <= n; j++) {
           |      |              ~      ~~~~~~
           |      |              |        |
           |      |              |        (29) following 'true' branch (when 'j <= n')...
           |      |              (28) ...to here
           |   41 |         dp[0][j] = 0;
           |      |         ~~~~~
           |      |           |
           |      |           (30) ...to here
           |......
           |   44 |     for (int i = 1; i <= k; i++) {
           |      |                     ~~~~~~
           |      |                       |
           |      |                       (31) following 'true' branch (when 'i <= k')...
           |   45 |         int maxDiff = -prices[0];
           |      |                        ~~~~~~~~~
           |      |                              |
           |      |                              (32) ...to here
           |   46 |         for (int j = 1; j < n; j++) {
           |      |                         ~~~~~
           |      |                           |
           |      |                           (33) following 'true' branch (when 'j < n')...
           |   47 |             dp[i][j] = dp[i][j - 1] > (prices[j] + maxDiff) ? dp[i][j - 1] : (prices[j] + maxDiff);
           |      |                        ~~~~~~~~~~~~          ~
           |      |                             |                |
           |      |                             |                (34) ...to here
           |      |                             (35) use of uninitialized value '*_56 + _59' here
           |
./collected_code_3/round4/heal_1/healed/problem-469.c:52:29: warning: use of uninitialized value '*dp_120 + _85' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   52 |     int maxProfitResult = dp[k][n - 1];
      |                           ~~^~~
  'maxProfit': events 1-16
    |
    |    5 |     if (k == 0 || n == 0) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |    9 |     if (k > n / 2) {
    |      |        ~    ~~~~~
    |      |        |      |
    |      |        |      (2) ...to here
    |      |        (3) following 'false' branch...
    |......
    |   19 |     int **dp = (int **)malloc((k + 1) * sizeof(int *));
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |         |
    |      |                        |         (4) ...to here
    |      |                        (5) region created on heap here
    |   20 |     if (dp == NULL) {
    |      |        ~
    |      |        |
    |      |        (6) following 'false' branch (when 'dp' is non-NULL)...
    |......
    |   24 |     for (int i = 0; i <= k; i++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (8) following 'false' branch (when 'i > k')...
    |      |              (7) ...to here
    |......
    |   36 |     for (int i = 0; i <= k; i++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (10) following 'false' branch (when 'i > k')...
    |      |              (9) ...to here
    |......
    |   40 |     for (int j = 0; j <= n; j++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (12) following 'false' branch (when 'j > n')...
    |      |              (11) ...to here
    |......
    |   44 |     for (int i = 1; i <= k; i++) {
    |      |              ~      ~~~~~~
    |      |              |        |
    |      |              |        (14) following 'false' branch (when 'i > k')...
    |      |              (13) ...to here
    |......
    |   52 |     int maxProfitResult = dp[k][n - 1];
    |      |                           ~~~~~
    |      |                             |
    |      |                             (15) ...to here
    |      |                             (16) use of uninitialized value '*dp_120 + _85' here
    |
