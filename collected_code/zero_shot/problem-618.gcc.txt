collected_code/problem-618-0.c: In function 'divideLists':
collected_code/problem-618-0.c:13:33: warning: implicit declaration of function 'malloc' [-Wimplicit-function-declaration]
   13 |         Node* newNode = (Node*) malloc(sizeof(Node));
      |                                 ^~~~~~
collected_code/problem-618-0.c:2:1: note: include '<stdlib.h>' or provide a declaration of 'malloc'
    1 | #include <stdio.h>
  +++ |+#include <stdlib.h>
    2 | 
collected_code/problem-618-0.c:13:33: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
   13 |         Node* newNode = (Node*) malloc(sizeof(Node));
      |                                 ^~~~~~
collected_code/problem-618-0.c:13:33: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code/problem-618-0.c: In function 'main':
collected_code/problem-618-0.c:39:27: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
   39 |     Node* list1 = (Node*) malloc(sizeof(Node));
      |                           ^~~~~~
collected_code/problem-618-0.c:39:27: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code/problem-618-0.c: In function 'divideLists':
collected_code/problem-618-0.c:14:23: warning: dereference of possibly-NULL 'newNode' [CWE-690] [-Wanalyzer-possible-null-dereference]
   14 |         newNode->next = NULL;
      |                       ^
  'divideLists': events 1-3
    |
    |   12 |     while (list1 != NULL && list2 != NULL) {
    |      |                          ^
    |      |                          |
    |      |                          (1) following 'true' branch...
    |   13 |         Node* newNode = (Node*) malloc(sizeof(Node));
    |      |                                 ~~~~~~~~~~~~~~~~~~~~
    |      |                                 |
    |      |                                 (2) ...to here
    |      |                                 (3) this call could return NULL
    |
  'divideLists': event 4
    |
    |   14 |         newNode->next = NULL;
    |      |                       ^
    |      |                       |
    |      |                       (4) 'newNode' could be NULL: unchecked value from (3)
    |
collected_code/problem-618-0.c: In function 'main':
collected_code/problem-618-0.c:42:17: warning: dereference of possibly-NULL 'list1' [CWE-690] [-Wanalyzer-possible-null-dereference]
   42 |     list1->data = 10;
      |     ~~~~~~~~~~~~^~~~
  'main': events 1-2
    |
    |   39 |     Node* list1 = (Node*) malloc(sizeof(Node));
    |      |                           ^~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (1) this call could return NULL
    |......
    |   42 |     list1->data = 10;
    |      |     ~~~~~~~~~~~~~~~~       
    |      |                 |
    |      |                 (2) 'list1' could be NULL: unchecked value from (1)
    |
collected_code/problem-618-0.c:43:17: warning: dereference of possibly-NULL 'list2' [CWE-690] [-Wanalyzer-possible-null-dereference]
   43 |     list2->data = 5;
      |     ~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   40 |     Node* list2 = (Node*) malloc(sizeof(Node));
    |      |                           ^~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (1) this call could return NULL
    |......
    |   43 |     list2->data = 5;
    |      |     ~~~~~~~~~~~~~~~        
    |      |                 |
    |      |                 (2) 'list2' could be NULL: unchecked value from (1)
    |
collected_code/problem-618-0.c:46:23: warning: dereference of possibly-NULL '*list1.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   46 |     list1->next->data = 20;
      |     ~~~~~~~~~~~~~~~~~~^~~~
  'main': events 1-2
    |
    |   44 |     list1->next = (Node*) malloc(sizeof(Node));
    |      |                           ^~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (1) this call could return NULL
    |   45 |     list2->next = (Node*) malloc(sizeof(Node));
    |   46 |     list1->next->data = 20;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~ 
    |      |                       |
    |      |                       (2) '*list1.next' could be NULL: unchecked value from (1)
    |
collected_code/problem-618-0.c:47:23: warning: dereference of possibly-NULL '*list2.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   47 |     list2->next->data = 10;
      |     ~~~~~~~~~~~~~~~~~~^~~~
  'main': events 1-2
    |
    |   45 |     list2->next = (Node*) malloc(sizeof(Node));
    |      |                           ^~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (1) this call could return NULL
    |   46 |     list1->next->data = 20;
    |   47 |     list2->next->data = 10;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~ 
    |      |                       |
    |      |                       (2) '*list2.next' could be NULL: unchecked value from (1)
    |
