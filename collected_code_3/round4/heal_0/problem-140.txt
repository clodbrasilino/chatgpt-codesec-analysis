```C
#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void push(struct Node** head_ref, int new_data) {
    struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

void printList(struct Node *node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
}

void findSingleOccurrence(struct Node *head) {
    struct Node *temp = head;
    while (temp != NULL) {
        struct Node *innerTemp = head;
        int count = 0;
        while (innerTemp != NULL) {
            if (innerTemp->data == temp->data) {
                count++;
            }
            innerTemp = innerTemp->next;
        }
        if (count == 1) {
            printf("%d ", temp->data);
        }
        temp = temp->next;
    }
}

int main() {
    struct Node* head = NULL;
    push(&head, 20);
    push(&head, 13);
    push(&head, 13);
    push(&head, 11);
    push(&head, 12);
    push(&head, 12);
    push(&head, 11);
    push(&head, 10);

    printf("Given linked list \n");
    printList(head);

    printf("\nElements that occur singly in the list are \n");
    findSingleOccurrence(head);

    return 0;
}
```