collected_code/problem-187-0.c:15:23: error: Cannot determine that 'X[i-1]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            else if (X[i - 1] == Y[j - 1])
                      ^
collected_code/problem-187-0.c:15:35: error: Cannot determine that 'Y[j-1]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            else if (X[i - 1] == Y[j - 1])
                                  ^
collected_code/problem-187-0.c:29:14: error: Cannot determine that 'X[i-1]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
        if (X[i - 1] == Y[j - 1]) {
             ^
collected_code/problem-187-0.c:29:26: error: Cannot determine that 'Y[j-1]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
        if (X[i - 1] == Y[j - 1]) {
                         ^
collected_code/problem-187-0.c:30:31: error: Cannot determine that 'X[i-1]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            lcs[index - 1] = X[i - 1];
                              ^
collected_code/problem-187-0.c:41:46: error: Cannot determine that 'lcs[0]' is initialized [premium-bughuntingUninit]
    printf("Longest Common Subsequence: %s", lcs);
                                             ^
