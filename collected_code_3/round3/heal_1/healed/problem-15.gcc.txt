./collected_code_3/round3/heal_1/healed/problem-15.c: In function 'splitString':
./collected_code_3/round3/heal_1/healed/problem-15.c:17:11: warning: leak of '<unknown>' [CWE-401] [-Wanalyzer-malloc-leak]
   17 |           free(splitArr);
      |           ^~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   33 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   34 |     char str[] = "HelloWorld";
    |   35 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-14
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |......
           |    9 |     if (splitArr == NULL){
           |      |        ~
           |      |        |
           |      |        (4) following 'false' branch (when 'splitArr' is non-NULL)...
           |......
           |   12 |     for(i = 0; i < strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~  ~~~
           |      |           |      |               |
           |      |           |      |               (11) ...to here
           |      |           |      (6) following 'true' branch...
           |      |           |      (12) following 'true' branch...
           |      |           (5) ...to here
           |   13 |         splitArr[i] = (char*)calloc(strlen(str), sizeof(char));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |
           |      |                              (7) ...to here
           |      |                              (8) allocated here
           |      |                              (13) ...to here
           |   14 |         if(splitArr[i] == NULL) {
           |      |           ~
           |      |           |
           |      |           (9) assuming '<unknown>' is non-NULL
           |      |           (10) following 'false' branch...
           |      |           (14) following 'true' branch...
           |
         'splitString': event 15
           |
           |cc1:
           | (15): ...to here
           |
         'splitString': events 16-18
           |
           |   15 |           for(; i >= 0; i--)
           |      |                 ~~^~~~
           |      |                   |
           |      |                   (16) following 'true' branch (when 'i >= 0')...
           |   16 |             free(splitArr[i]);
           |      |                          ~
           |      |                          |
           |      |                          (17) ...to here
           |   17 |           free(splitArr);
           |      |           ~~~~~~~~~~~~~~
           |      |           |
           |      |           (18) '<unknown>' leaks here; was allocated at (8)
           |
./collected_code_3/round3/heal_1/healed/problem-15.c:23:21: warning: use of uninitialized value '*splitArr_62 + _27' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   23 |             splitArr[j][k] = '\0';
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   33 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   34 |     char str[] = "HelloWorld";
    |   35 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-13
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     if (splitArr == NULL){
           |      |        ~
           |      |        |
           |      |        (5) following 'false' branch (when 'splitArr' is non-NULL)...
           |......
           |   12 |     for(i = 0; i < strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'false' branch...
           |      |           (6) ...to here
           |......
           |   21 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'true' branch...
           |      |           (8) ...to here
           |   22 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (10) ...to here
           |      |           (11) following 'true' branch...
           |   23 |             splitArr[j][k] = '\0';
           |      |             ~~~~~~~~~~~
           |      |                     |
           |      |                     (12) ...to here
           |      |                     (13) use of uninitialized value '*splitArr_62 + _27' here
           |
./collected_code_3/round3/heal_1/healed/problem-15.c:27:21: warning: use of uninitialized value '*splitArr_62 + _35' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   27 |             splitArr[j][k++] = str[i];
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   33 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   34 |     char str[] = "HelloWorld";
    |   35 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-13
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     if (splitArr == NULL){
           |      |        ~
           |      |        |
           |      |        (5) following 'false' branch (when 'splitArr' is non-NULL)...
           |......
           |   12 |     for(i = 0; i < strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'false' branch...
           |      |           (6) ...to here
           |......
           |   21 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'true' branch...
           |      |           (8) ...to here
           |   22 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (10) ...to here
           |      |           (11) following 'false' branch...
           |......
           |   27 |             splitArr[j][k++] = str[i];
           |      |             ~~~~~~~~~~~           ~
           |      |                     |             |
           |      |                     |             (12) ...to here
           |      |                     (13) use of uninitialized value '*splitArr_62 + _35' here
           |
./collected_code_3/round3/heal_1/healed/problem-15.c: In function 'main':
./collected_code_3/round3/heal_1/healed/problem-15.c:40:43: warning: use of uninitialized value '*splitArr_27 + _17' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   40 |     for(i = 0; i < strlen(str) && splitArr[i]; i++) {
      |                                   ~~~~~~~~^~~
  'main': events 1-2
    |
    |   33 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   34 |     char str[] = "HelloWorld";
    |   35 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-10
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     if (splitArr == NULL){
           |      |        ~
           |      |        |
           |      |        (5) following 'false' branch (when 'splitArr' is non-NULL)...
           |......
           |   12 |     for(i = 0; i < strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'false' branch...
           |      |           (6) ...to here
           |......
           |   21 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'false' branch...
           |      |           (8) ...to here
           |......
           |   30 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (10) ...to here
           |
    <------+
    |
  'main': events 11-16
    |
    |   35 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (11) returning to 'main' from 'splitString'
    |   36 |     if(splitArr == NULL){
    |      |       ~                
    |      |       |
    |      |       (12) following 'false' branch (when 'splitArr' is non-NULL)...
    |......
    |   40 |     for(i = 0; i < strlen(str) && splitArr[i]; i++) {
    |      |         ~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |           |                    |          |
    |      |           |                    |          (15) ...to here
    |      |           |                    |          (16) use of uninitialized value '*splitArr_27 + _17' here
    |      |           (13) ...to here      (14) following 'true' branch...
    |
./collected_code_3/round3/heal_1/healed/problem-15.c:40:43: warning: use of uninitialized value '*splitArr_27 + _17' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   40 |     for(i = 0; i < strlen(str) && splitArr[i]; i++) {
      |                                   ~~~~~~~~^~~
  'main': events 1-2
    |
    |   33 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   34 |     char str[] = "HelloWorld";
    |   35 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-14
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     if (splitArr == NULL){
           |      |        ~
           |      |        |
           |      |        (5) following 'false' branch (when 'splitArr' is non-NULL)...
           |......
           |   12 |     for(i = 0; i < strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~  ~~~
           |      |           |      |               |
           |      |           |      |               (10) ...to here
           |      |           |      (7) following 'true' branch...
           |      |           |      (11) following 'false' branch...
           |      |           (6) ...to here
           |   13 |         splitArr[i] = (char*)calloc(strlen(str), sizeof(char));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |
           |      |                              (8) ...to here
           |   14 |         if(splitArr[i] == NULL) {
           |      |           ~
           |      |           |
           |      |           (9) following 'false' branch...
           |......
           |   21 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (13) following 'false' branch...
           |      |           (12) ...to here
           |......
           |   30 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (14) ...to here
           |
    <------+
    |
  'main': events 15-24
    |
    |   35 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (15) returning to 'main' from 'splitString'
    |   36 |     if(splitArr == NULL){
    |      |       ~                
    |      |       |
    |      |       (16) following 'false' branch (when 'splitArr' is non-NULL)...
    |......
    |   40 |     for(i = 0; i < strlen(str) && splitArr[i]; i++) {
    |      |         ~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |           |                    |          |
    |      |           |                    |          (23) ...to here
    |      |           |                    |          (24) use of uninitialized value '*splitArr_27 + _17' here
    |      |           |                    (18) following 'true' branch...
    |      |           (17) ...to here      (22) following 'true' branch...
    |   41 |         if(splitArr[i][0] == '\0') {
    |      |           ~        ~   
    |      |           |        |
    |      |           |        (19) ...to here
    |      |           (20) following 'false' branch...
    |......
    |   44 |         printf("%s\n", splitArr[i]);
    |      |                                ~
    |      |                                |
    |      |                                (21) ...to here
    |
