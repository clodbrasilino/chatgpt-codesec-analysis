collected_code_3/problem-97-3.c: In function 'find_frequency':
collected_code_3/problem-97-3.c:10:22: warning: use of uninitialized value '*arr_12(D) + _2' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   10 |         frequency[arr[i]]++;
      |                   ~~~^~~
  'main': events 1-11
    |
    |   14 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   23 |     for(i = 0; i < n; i++) {
    |      |                ~~~~~  ~~~
    |      |                  |     |
    |      |                  |     (6) ...to here
    |      |                  (2) following 'true' branch...
    |      |                  (7) following 'false' branch...
    |   24 |         printf("Enter the size of list %d: ", i+1);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (3) ...to here
    |   25 |         scanf("%d", &m);
    |   26 |         arr[i] = (int *)malloc(m * sizeof(int));
    |      |                         ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                         |
    |      |                         (4) region created on heap here
    |   27 |         printf("Enter elements of list %d: ", i+1);
    |   28 |         for(j = 0; j < m; j++) {
    |      |                    ~~~~~
    |      |                      |
    |      |                      (5) following 'false' branch...
    |......
    |   33 |     for(i = 0; i < n; i++) {
    |      |         ~~~~~  ~~~~~
    |      |           |      |
    |      |           |      (9) following 'true' branch...
    |      |           (8) ...to here
    |   34 |         find_frequency(arr[i], sizeof(arr[i])/sizeof(arr[i][0]));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                 |
    |      |         |                 (10) ...to here
    |      |         (11) calling 'find_frequency' from 'main'
    |
    +--> 'find_frequency': events 12-15
           |
           |    8 | void find_frequency(int arr[], int n) {
           |      |      ^~~~~~~~~~~~~~
           |      |      |
           |      |      (12) entry to 'find_frequency'
           |    9 |     for(int i = 0; i < n; i++) {
           |      |                    ~~~~~
           |      |                      |
           |      |                      (13) following 'true' branch (when 'i < n')...
           |   10 |         frequency[arr[i]]++;
           |      |                   ~~~~~~
           |      |                      |
           |      |                      (14) ...to here
           |      |                      (15) use of uninitialized value '*arr_12(D) + _2' here
           |
collected_code_3/problem-97-3.c:10:22: warning: dereference of possibly-NULL 'arr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   10 |         frequency[arr[i]]++;
      |                   ~~~^~~
  'main': events 1-11
    |
    |   14 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   23 |     for(i = 0; i < n; i++) {
    |      |                ~~~~~  ~~~
    |      |                  |     |
    |      |                  |     (6) ...to here
    |      |                  (2) following 'true' branch...
    |      |                  (7) following 'false' branch...
    |   24 |         printf("Enter the size of list %d: ", i+1);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (3) ...to here
    |   25 |         scanf("%d", &m);
    |   26 |         arr[i] = (int *)malloc(m * sizeof(int));
    |      |                         ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                         |
    |      |                         (4) this call could return NULL
    |   27 |         printf("Enter elements of list %d: ", i+1);
    |   28 |         for(j = 0; j < m; j++) {
    |      |                    ~~~~~
    |      |                      |
    |      |                      (5) following 'false' branch...
    |......
    |   33 |     for(i = 0; i < n; i++) {
    |      |         ~~~~~  ~~~~~
    |      |           |      |
    |      |           |      (9) following 'true' branch...
    |      |           (8) ...to here
    |   34 |         find_frequency(arr[i], sizeof(arr[i])/sizeof(arr[i][0]));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                 |
    |      |         |                 (10) ...to here
    |      |         (11) calling 'find_frequency' from 'main'
    |
    +--> 'find_frequency': events 12-15
           |
           |    8 | void find_frequency(int arr[], int n) {
           |      |      ^~~~~~~~~~~~~~
           |      |      |
           |      |      (12) entry to 'find_frequency'
           |    9 |     for(int i = 0; i < n; i++) {
           |      |                    ~~~~~
           |      |                      |
           |      |                      (13) following 'true' branch (when 'i < n')...
           |   10 |         frequency[arr[i]]++;
           |      |                   ~~~~~~
           |      |                      |
           |      |                      (14) ...to here
           |      |                      (15) 'arr + (long unsigned int)i * 4' could be NULL: unchecked value from (4)
           |
collected_code_3/problem-97-3.c: In function 'main':
collected_code_3/problem-97-3.c:26:16: warning: dereference of possibly-NULL 'arr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   26 |         arr[i] = (int *)malloc(m * sizeof(int));
      |         ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-4
    |
    |   21 |     arr = (int **)malloc(n * sizeof(int *));
    |      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (1) this call could return NULL
    |   22 | 
    |   23 |     for(i = 0; i < n; i++) {
    |      |                ~~~~~
    |      |                  |
    |      |                  (2) following 'true' branch...
    |   24 |         printf("Enter the size of list %d: ", i+1);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (3) ...to here
    |   25 |         scanf("%d", &m);
    |   26 |         arr[i] = (int *)malloc(m * sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                |
    |      |                (4) 'arr + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
