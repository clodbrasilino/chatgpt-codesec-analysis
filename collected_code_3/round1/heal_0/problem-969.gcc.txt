collected_code_3/problem-969-1.c: In function 'joinTuples':
collected_code_3/problem-969-1.c:22:33: warning: dereference of possibly-NULL 'result' [CWE-690] [-Wanalyzer-possible-null-dereference]
   22 |                 result[count++] = newTuple;
      |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~
  'main': events 1-2
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   40 |     Tuple* result = joinTuples(tuples, size);
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (2) calling 'joinTuples' from 'main'
    |
    +--> 'joinTuples': events 3-11
           |
           |   10 | Tuple* joinTuples(Tuple* tuples, int size) {
           |      |        ^~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'joinTuples'
           |   11 |     Tuple* result = malloc(sizeof(Tuple) * size);
           |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                     |
           |      |                     (4) this call could return NULL
           |......
           |   14 |     for(int i = 0; i < size; i++) {
           |      |                    ~~~~~~~~
           |      |                      |
           |      |                      (5) following 'true' branch (when 'i < size')...
           |   15 |         for(int j = i + 1; j < size; j++) {
           |      |                 ~          ~~~~~~~~
           |      |                 |            |
           |      |                 |            (7) following 'true' branch (when 'j < size')...
           |      |                 (6) ...to here
           |   16 |             if(strcmp(tuples[i].first, tuples[j].first) == 0) {
           |      |               ~                              ~
           |      |               |                              |
           |      |               |                              (8) ...to here
           |      |               (9) following 'true' branch (when the strings are equal)...
           |   17 |                 Tuple newTuple;
           |   18 |                 newTuple.first = tuples[i].first;
           |      |                                        ~
           |      |                                        |
           |      |                                        (10) ...to here
           |......
           |   22 |                 result[count++] = newTuple;
           |      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                                 |
           |      |                                 (11) 'result + (long unsigned int)count * 16' could be NULL: unchecked value from (4)
           |
collected_code_3/problem-969-1.c: In function 'main':
collected_code_3/problem-969-1.c:43:9: warning: use of uninitialized value '*result_24 + _2.second' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   43 |         printf("%s: %s\n", result[i].first, result[i].second);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   40 |     Tuple* result = joinTuples(tuples, size);
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (2) calling 'joinTuples' from 'main'
    |
    +--> 'joinTuples': events 3-10
           |
           |   10 | Tuple* joinTuples(Tuple* tuples, int size) {
           |      |        ^~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'joinTuples'
           |   11 |     Tuple* result = malloc(sizeof(Tuple) * size);
           |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                     |
           |      |                     (4) region created on heap here
           |......
           |   14 |     for(int i = 0; i < size; i++) {
           |      |                    ~~~~~~~~
           |      |                      |
           |      |                      (5) following 'true' branch (when 'i < size')...
           |   15 |         for(int j = i + 1; j < size; j++) {
           |      |                 ~          ~~~~~~~~  ~~~
           |      |                 |            |        |
           |      |                 |            |        (10) ...to here
           |      |                 |            (7) following 'true' branch (when 'j < size')...
           |      |                 (6) ...to here
           |   16 |             if(strcmp(tuples[i].first, tuples[j].first) == 0) {
           |      |               ~                              ~
           |      |               |                              |
           |      |               |                              (8) ...to here
           |      |               (9) following 'false' branch (when the strings are non-equal)...
           |
    <------+
    |
  'main': events 11-14
    |
    |   40 |     Tuple* result = joinTuples(tuples, size);
    |      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (11) returning to 'main' from 'joinTuples'
    |   41 | 
    |   42 |     for(int i = 0; i < size; i++) {
    |      |                    ~~~~~~~~
    |      |                      |
    |      |                      (12) following 'true' branch (when 'i < size')...
    |   43 |         printf("%s: %s\n", result[i].first, result[i].second);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                                         |
    |      |         |                                         (13) ...to here
    |      |         (14) use of uninitialized value '*result_24 + _2.second' here
    |
collected_code_3/problem-969-1.c:43:9: warning: dereference of possibly-NULL 'result' [CWE-690] [-Wanalyzer-possible-null-dereference]
   43 |         printf("%s: %s\n", result[i].first, result[i].second);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   40 |     Tuple* result = joinTuples(tuples, size);
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (2) calling 'joinTuples' from 'main'
    |
    +--> 'joinTuples': events 3-10
           |
           |   10 | Tuple* joinTuples(Tuple* tuples, int size) {
           |      |        ^~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'joinTuples'
           |   11 |     Tuple* result = malloc(sizeof(Tuple) * size);
           |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                     |
           |      |                     (4) this call could return NULL
           |......
           |   14 |     for(int i = 0; i < size; i++) {
           |      |                    ~~~~~~~~
           |      |                      |
           |      |                      (5) following 'true' branch (when 'i < size')...
           |   15 |         for(int j = i + 1; j < size; j++) {
           |      |                 ~          ~~~~~~~~  ~~~
           |      |                 |            |        |
           |      |                 |            |        (10) ...to here
           |      |                 |            (7) following 'true' branch (when 'j < size')...
           |      |                 (6) ...to here
           |   16 |             if(strcmp(tuples[i].first, tuples[j].first) == 0) {
           |      |               ~                              ~
           |      |               |                              |
           |      |               |                              (8) ...to here
           |      |               (9) following 'false' branch (when the strings are non-equal)...
           |
    <------+
    |
  'main': events 11-14
    |
    |   40 |     Tuple* result = joinTuples(tuples, size);
    |      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (11) possible return of NULL to 'main' from 'joinTuples'
    |   41 | 
    |   42 |     for(int i = 0; i < size; i++) {
    |      |                    ~~~~~~~~
    |      |                      |
    |      |                      (12) following 'true' branch (when 'i < size')...
    |   43 |         printf("%s: %s\n", result[i].first, result[i].second);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                                         |
    |      |         |                                         (13) ...to here
    |      |         (14) 'result + (long unsigned int)i * 16' could be NULL: unchecked value from (4)
    |
