Flawfinder version 2.0.19, (C) 2001-2019 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 222
Examining collected_code/problem-507-0.c

FINAL RESULTS:

collected_code/problem-507-0.c:10:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
collected_code/problem-507-0.c:12:  [1] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused). Risk is low because the source is a constant character.

ANALYSIS SUMMARY:

Hits = 2
Lines analyzed = 29 in approximately 0.49 seconds (59 lines/second)
Physical Source Lines of Code (SLOC) = 24
Hits@level = [0]   1 [1]   1 [2]   0 [3]   0 [4]   1 [5]   0
Hits@level+ = [0+]   3 [1+]   2 [2+]   1 [3+]   1 [4+]   1 [5+]   0
Hits/KSLOC@level+ = [0+] 125 [1+] 83.3333 [2+] 41.6667 [3+] 41.6667 [4+] 41.6667 [5+]   0
Minimum risk level = 1

Not every hit is necessarily a security vulnerability.
You can inhibit a report by adding a comment in this form:
// flawfinder: ignore
Make *sure* it's a false positive!
You can use the option --neverignore to show these.

There may be other security vulnerabilities; review your code!
See 'Secure Programming HOWTO'
(https://dwheeler.com/secure-programs) for more information.
