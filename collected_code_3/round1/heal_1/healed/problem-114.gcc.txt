collected_code_3/round1/heal_1/healed/problem-114.c: In function 'assignFrequency':
collected_code_3/round1/heal_1/healed/problem-114.c:23:23: warning: leak of '<unknown>' [CWE-401] [-Wanalyzer-malloc-leak]
   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
      |     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   42 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   47 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (2) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 3-11
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (3) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~
           |      |                      |
           |      |                      (4) following 'false' branch...
           |......
           |   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                                 |                                    |
           |      |                                 |                                    (5) ...to here
           |      |                                 (6) when 'realloc' succeeds, moving buffer
           |   24 | 
           |   25 |     if(tupleList->tuples == NULL) {
           |      |       ~
           |      |       |
           |      |       (7) following 'false' branch...
           |......
           |   30 |     tupleList->tuples[tupleList->size].key = (char*)malloc(strlen(key) + 1);
           |      |                                                     ~~~~~~~~~~~~~~~~~~~~~~~
           |      |                                                     |      |
           |      |                                                     |      (8) ...to here
           |      |                                                     (9) allocated here
           |   31 | 
           |   32 |     if(tupleList->tuples[tupleList->size].key == NULL) {
           |      |       ~
           |      |       |
           |      |       (10) assuming '<unknown>' is non-NULL
           |      |       (11) following 'false' branch...
           |
         'assignFrequency': event 12
           |
           |   37 |     strcpy(tupleList->tuples[tupleList->size].key, key);
           |      |            ~~~~~~~~~^~~~~~~~
           |      |                     |
           |      |                     (12) ...to here
           |
    <------+
    |
  'main': events 13-14
    |
    |   47 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (13) returning to 'main' from 'assignFrequency'
    |   48 |     assignFrequency(&tupleList, "tuple2", 10);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (14) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 15-20
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (15) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~  ~~~
           |      |                      |                   |
           |      |                      |                   (19) ...to here
           |      |                      (16) following 'true' branch...
           |   17 |         if(strcmp(tupleList->tuples[i].key, key) == 0) {
           |      |           ~       ~~~~~~~~~~~~~~~~~
           |      |           |                |
           |      |           |                (17) ...to here
           |      |           (18) following 'false' branch (when the strings are non-equal)...
           |......
           |   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (20) '<unknown>' leaks here; was allocated at (9)
           |
collected_code_3/round1/heal_1/healed/problem-114.c:23:23: warning: leak of 'tupleList.tuples' [CWE-401] [-Wanalyzer-malloc-leak]
   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
      |     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   42 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   47 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (2) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 3-10
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (3) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~
           |      |                      |
           |      |                      (4) following 'false' branch...
           |......
           |   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                                 |                                    |
           |      |                                 (6) allocated here                   (5) ...to here
           |      |                                 (7) when 'realloc' succeeds, moving buffer
           |   24 | 
           |   25 |     if(tupleList->tuples == NULL) {
           |      |       ~
           |      |       |
           |      |       (8) following 'false' branch...
           |......
           |   30 |     tupleList->tuples[tupleList->size].key = (char*)malloc(strlen(key) + 1);
           |      |                                                            ~~~~~~~~~~~
           |      |                                                            |
           |      |                                                            (9) ...to here
           |   31 | 
           |   32 |     if(tupleList->tuples[tupleList->size].key == NULL) {
           |      |       ~
           |      |       |
           |      |       (10) following 'false' branch...
           |
         'assignFrequency': event 11
           |
           |   37 |     strcpy(tupleList->tuples[tupleList->size].key, key);
           |      |            ~~~~~~~~~^~~~~~~~
           |      |                     |
           |      |                     (11) ...to here
           |
    <------+
    |
  'main': events 12-13
    |
    |   47 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (12) returning to 'main' from 'assignFrequency'
    |   48 |     assignFrequency(&tupleList, "tuple2", 10);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (13) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 14-20
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (14) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~  ~~~
           |      |                      |                   |
           |      |                      |                   (18) ...to here
           |      |                      (15) following 'true' branch...
           |   17 |         if(strcmp(tupleList->tuples[i].key, key) == 0) {
           |      |           ~       ~~~~~~~~~~~~~~~~~
           |      |           |                |
           |      |           |                (16) ...to here
           |      |           (17) following 'false' branch (when the strings are non-equal)...
           |......
           |   23 |     tupleList->tuples = (Tuple*)realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |         |
           |      |                       |         (19) when 'realloc' fails
           |      |                       (20) 'tupleList.tuples' leaks here; was allocated at (6)
           |
