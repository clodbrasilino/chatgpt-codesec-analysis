collected_code_3/problem-102-2.c: In function 'snakeToCamel':
collected_code_3/problem-102-2.c:8:30: warning: implicit declaration of function 'malloc' [-Wimplicit-function-declaration]
    8 |     char* camel_str = (char*)malloc(sizeof(char) * len);
      |                              ^~~~~~
collected_code_3/problem-102-2.c:4:1: note: include '<stdlib.h>' or provide a declaration of 'malloc'
    3 | #include <ctype.h>
  +++ |+#include <stdlib.h>
    4 | 
collected_code_3/problem-102-2.c:8:30: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
    8 |     char* camel_str = (char*)malloc(sizeof(char) * len);
      |                              ^~~~~~
collected_code_3/problem-102-2.c:8:30: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code_3/problem-102-2.c: In function 'main':
collected_code_3/problem-102-2.c:29:5: warning: implicit declaration of function 'free' [-Wimplicit-function-declaration]
   29 |     free(camel_str);
      |     ^~~~
collected_code_3/problem-102-2.c:29:5: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code_3/problem-102-2.c:29:5: warning: incompatible implicit declaration of built-in function 'free' [-Wbuiltin-declaration-mismatch]
collected_code_3/problem-102-2.c:29:5: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code_3/problem-102-2.c: In function 'snakeToCamel':
collected_code_3/problem-102-2.c:13:26: warning: dereference of possibly-NULL 'camel_str' [CWE-690] [-Wanalyzer-possible-null-dereference]
   13 |             camel_str[j] = toupper(snake_str[i]);
      |             ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
  'snakeToCamel': events 1-6
    |
    |    8 |     char* camel_str = (char*)malloc(sizeof(char) * len);
    |      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (1) this call could return NULL
    |    9 | 
    |   10 |     for(i = 0; i < len; i++) {
    |      |                ~~~~~~~        
    |      |                  |
    |      |                  (2) following 'true' branch (when 'i < len')...
    |   11 |         if(snake_str[i] == '_') {
    |      |           ~         ~         
    |      |           |         |
    |      |           |         (3) ...to here
    |      |           (4) following 'true' branch...
    |   12 |             i++;
    |      |             ~~~               
    |      |              |
    |      |              (5) ...to here
    |   13 |             camel_str[j] = toupper(snake_str[i]);
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                          |
    |      |                          (6) 'camel_str + (sizetype)j' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-102-2.c:15:26: warning: dereference of possibly-NULL 'camel_str' [CWE-690] [-Wanalyzer-possible-null-dereference]
   15 |             camel_str[j] = snake_str[i];
      |             ~~~~~~~~~~~~~^~~~~~~~~~~~~~
  'snakeToCamel': events 1-6
    |
    |    8 |     char* camel_str = (char*)malloc(sizeof(char) * len);
    |      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (1) this call could return NULL
    |    9 | 
    |   10 |     for(i = 0; i < len; i++) {
    |      |                ~~~~~~~        
    |      |                  |
    |      |                  (2) following 'true' branch (when 'i < len')...
    |   11 |         if(snake_str[i] == '_') {
    |      |           ~         ~         
    |      |           |         |
    |      |           |         (3) ...to here
    |      |           (4) following 'false' branch...
    |......
    |   15 |             camel_str[j] = snake_str[i];
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                          |          |
    |      |                          |          (5) ...to here
    |      |                          (6) 'camel_str + (sizetype)j' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-102-2.c:19:18: warning: dereference of possibly-NULL 'camel_str' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |     camel_str[j] = '\0';
      |     ~~~~~~~~~~~~~^~~~~~
  'main': events 1-2
    |
    |   23 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   27 |     char* camel_str = snakeToCamel(snake_str);
    |      |                       ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'snakeToCamel' from 'main'
    |
    +--> 'snakeToCamel': events 3-7
           |
           |    5 | char* snakeToCamel(char* snake_str) {
           |      |       ^~~~~~~~~~~~
           |      |       |
           |      |       (3) entry to 'snakeToCamel'
           |......
           |    8 |     char* camel_str = (char*)malloc(sizeof(char) * len);
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |
           |      |                              (4) this call could return NULL
           |    9 | 
           |   10 |     for(i = 0; i < len; i++) {
           |      |                ~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch (when 'i >= len')...
           |......
           |   19 |     camel_str[j] = '\0';
           |      |     ~~~~~~~~~~~~~~~~~~~
           |      |              |   |
           |      |              |   (7) 'camel_str + (sizetype)j' could be NULL: unchecked value from (4)
           |      |              (6) ...to here
           |
