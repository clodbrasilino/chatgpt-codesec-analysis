collected_code_3/round4/heal_0/problem-522.c: In function 'longestBitonic':
collected_code_3/round4/heal_0/problem-522.c:12:16: warning: dereference of possibly-NULL 'lis' [CWE-690] [-Wanalyzer-possible-null-dereference]
   12 |         lis[i] = lds[i] = 1;
      |         ~~~~~~~^~~~~~~~~~~~
  'longestBitonic': events 1-4
    |
    |    7 |     int *lis = (int *)malloc(sizeof(int) * n);
    |      |                       ^~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (1) this call could return NULL
    |......
    |   11 |     for (i = 0; i < n; i++)
    |      |                 ~~~~~  
    |      |                   |
    |      |                   (2) following 'true' branch (when 'i < n')...
    |   12 |         lis[i] = lds[i] = 1;
    |      |         ~~~~~~~~~~~~~~~~~~~
    |      |                |    |
    |      |                |    (3) ...to here
    |      |                (4) 'lis + (long unsigned int)i * 4' could be NULL: unchecked value from (1)
    |
collected_code_3/round4/heal_0/problem-522.c:12:25: warning: dereference of possibly-NULL 'lds' [CWE-690] [-Wanalyzer-possible-null-dereference]
   12 |         lis[i] = lds[i] = 1;
      |                  ~~~~~~~^~~
  'longestBitonic': events 1-4
    |
    |    8 |     int *lds = (int *)malloc(sizeof(int) * n);
    |      |                       ^~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (1) this call could return NULL
    |......
    |   11 |     for (i = 0; i < n; i++)
    |      |                 ~~~~~  
    |      |                   |
    |      |                   (2) following 'true' branch (when 'i < n')...
    |   12 |         lis[i] = lds[i] = 1;
    |      |                  ~~~~~~~~~~
    |      |                     |   |
    |      |                     |   (4) 'lds + (long unsigned int)i * 4' could be NULL: unchecked value from (1)
    |      |                     (3) ...to here
    |
collected_code_3/round4/heal_0/problem-522.c:21:43: warning: use of uninitialized value '*lds_102 + _45' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   21 |             if (arr[i] > arr[j] && lds[i] < lds[j] + 1)
      |                                    ~~~~~~~^~~~~~~~~~~~
  'main': events 1-2
    |
    |   35 | int main()
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   39 |     printf("Length of longest bitonic subsequence is %d\n", longestBitonic(arr, n));
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (2) calling 'longestBitonic' from 'main'
    |
    +--> 'longestBitonic': events 3-23
           |
           |    4 | int longestBitonic(int arr[], int n)
           |      |     ^~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'longestBitonic'
           |......
           |    8 |     int *lds = (int *)malloc(sizeof(int) * n);
           |      |                       ~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (4) region created on heap here
           |......
           |   11 |     for (i = 0; i < n; i++)
           |      |                 ~~~~~
           |      |                   |
           |      |                   (5) following 'true' branch (when 'i < n')...
           |      |                   (7) following 'true' branch (when 'i < n')...
           |      |                   (9) following 'false' branch (when 'i >= n')...
           |   12 |         lis[i] = lds[i] = 1;
           |      |                     ~
           |      |                     |
           |      |                     (6) ...to here
           |      |                     (8) ...to here
           |   13 | 
           |   14 |     for (i = 1; i < n; i++)
           |      |          ~~~~~  ~~~~~
           |      |            |      |
           |      |            |      (11) following 'true' branch (when 'i < n')...
           |      |            (10) ...to here
           |   15 |         for (j = 0; j < i; j++)
           |      |              ~~~~~  ~~~~~
           |      |                |      |
           |      |                |      (13) following 'true' branch (when 'j < i')...
           |      |                (12) ...to here
           |   16 |             if (arr[i] > arr[j] && lis[i] < lis[j] + 1)
           |      |                ~   ~                           ~
           |      |                |   |                           |
           |      |                |   (14) ...to here             (16) ...to here
           |      |                (15) following 'true' branch...
           |......
           |   19 |     for (i = n - 2; i >= 0; i--)
           |      |                     ~~~~~~
           |      |                       |
           |      |                       (17) following 'true' branch (when 'i >= 0')...
           |   20 |         for (j = n - 1; j > i; j--)
           |      |              ~~~~~~~~~  ~~~~~
           |      |                |          |
           |      |                |          (19) following 'true' branch (when 'j > i')...
           |      |                (18) ...to here
           |   21 |             if (arr[i] > arr[j] && lds[i] < lds[j] + 1)
           |      |                ~   ~               ~~~~~~~~~~~~~~~~~~~
           |      |                |   |                      |    |
           |      |                |   |                      |    (22) ...to here
           |      |                |   (20) ...to here        (23) use of uninitialized value '*lds_102 + _45' here
           |      |                (21) following 'true' branch...
           |
