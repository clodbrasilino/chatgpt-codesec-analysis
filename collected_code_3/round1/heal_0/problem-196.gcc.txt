collected_code_3/problem-196-1.c: In function 'removeTuples':
collected_code_3/problem-196-1.c:22:28: warning: dereference of possibly-NULL 'newTuples' [CWE-690] [-Wanalyzer-possible-null-dereference]
   22 |             newTuples[j++] = tuples[i];
      |             ~~~~~~~~~~~~~~~^~~~~~~~~~~
  'removeTuples': events 1-6
    |
    |   18 |     Tuple* newTuples = (Tuple*)malloc(count * sizeof(Tuple));
    |      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                |
    |      |                                (1) this call could return NULL
    |   19 |     int j = 0;
    |   20 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~    
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < size')...
    |   21 |         if (tuples[i].length != k) {
    |      |            ~      ~             
    |      |            |      |
    |      |            |      (3) ...to here
    |      |            (4) following 'true' branch...
    |   22 |             newTuples[j++] = tuples[i];
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                            |       |
    |      |                            |       (5) ...to here
    |      |                            (6) 'newTuples + (long unsigned int)j * 16' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-196-1.c: In function 'main':
collected_code_3/problem-196-1.c:35:26: warning: dereference of possibly-NULL 'tuples' [CWE-690] [-Wanalyzer-possible-null-dereference]
   35 |         tuples[i].length = i + 1;
      |         ~~~~~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   32 |     Tuple* tuples = (Tuple*)malloc(size * sizeof(Tuple));
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   33 | 
    |   34 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~ 
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < size')...
    |   35 |         tuples[i].length = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |               |          |
    |      |               |          (4) 'tuples + (long unsigned int)i * 16' could be NULL: unchecked value from (1)
    |      |               (3) ...to here
    |
collected_code_3/problem-196-1.c:38:35: warning: dereference of possibly-NULL '*tuples_65 + _18.elements + (long unsigned int)j * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   38 |             tuples[i].elements[j] = j;
      |             ~~~~~~~~~~~~~~~~~~~~~~^~~
  'main': events 1-6
    |
    |   34 |     for (int i = 0; i < size; i++) {
    |      |                     ~~^~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < size')...
    |   35 |         tuples[i].length = i + 1;
    |      |               ~        
    |      |               |
    |      |               (2) ...to here
    |   36 |         tuples[i].elements = (int*)malloc(tuples[i].length * sizeof(int));
    |      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                    |
    |      |                                    (3) this call could return NULL
    |   37 |         for (int j = 0; j < tuples[i].length; j++) {
    |      |                         ~~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (4) following 'true' branch...
    |   38 |             tuples[i].elements[j] = j;
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                   |               |
    |      |                   (5) ...to here  (6) '*tuples_65 + _18.elements + (long unsigned int)j * 4' could be NULL: unchecked value from (3)
    |
