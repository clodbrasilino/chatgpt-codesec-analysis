```C
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char key[50];
    char value[50];
} Dictionary;

Dictionary* mergeDictionaries(Dictionary* dict1, int size1, Dictionary* dict2, int size2) {
    Dictionary* mergedDict = (Dictionary*)malloc((size1 + size2) * sizeof(Dictionary));
    int i;

    for(i = 0; i < size1; i++) {
        strcpy(mergedDict[i].key, dict1[i].key);
        strcpy(mergedDict[i].value, dict1[i].value);
    }

    for(i = 0; i < size2; i++) {
        strcpy(mergedDict[i + size1].key, dict2[i].key);
        strcpy(mergedDict[i + size1].value, dict2[i].value);
    }

    return mergedDict;
}

int main() {
    Dictionary dict1[2] = {{"key1", "value1"}, {"key2", "value2"}};
    Dictionary dict2[2] = {{"key3", "value3"}, {"key4", "value4"}};

    Dictionary* mergedDict = mergeDictionaries(dict1, 2, dict2, 2);

    for(int i = 0; i < 4; i++) {
        printf("Key: %s Value: %s\n", mergedDict[i].key, mergedDict[i].value);
    }

    free(mergedDict);

    return 0;
}
```