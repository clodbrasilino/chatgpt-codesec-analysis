collected_code_3/problem-15-3.c: In function 'splitString':
collected_code_3/problem-15-3.c:10:21: warning: dereference of possibly-NULL 'splitArr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
      |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'splitString': events 1-4
    |
    |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
    |      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                               |
    |      |                               (1) this call could return NULL
    |    9 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~ 
    |      |                  |
    |      |                  (2) following 'true' branch...
    |   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |                              |
    |      |                     |                              (3) ...to here
    |      |                     (4) 'splitArr + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-15-3.c:14:21: warning: use of uninitialized value '*splitArr_50 + _19' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   14 |             splitArr[j][k] = '\0';
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-11
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'true' branch...
           |      |           (6) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (8) ...to here
           |      |           (9) following 'true' branch...
           |   14 |             splitArr[j][k] = '\0';
           |      |             ~~~~~~~~~~~
           |      |                     |
           |      |                     (10) ...to here
           |      |                     (11) use of uninitialized value '*splitArr_50 + _19' here
           |
collected_code_3/problem-15-3.c:14:21: warning: dereference of possibly-NULL 'splitArr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   14 |             splitArr[j][k] = '\0';
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-11
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) this call could return NULL
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'true' branch...
           |      |           (6) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (8) ...to here
           |      |           (9) following 'true' branch...
           |   14 |             splitArr[j][k] = '\0';
           |      |             ~~~~~~~~~~~
           |      |                     |
           |      |                     (10) ...to here
           |      |                     (11) 'splitArr + (long unsigned int)j * 8' could be NULL: unchecked value from (4)
           |
collected_code_3/problem-15-3.c:14:28: warning: dereference of possibly-NULL '*splitArr_50 + _19 + (sizetype)k' [CWE-690] [-Wanalyzer-possible-null-dereference]
   14 |             splitArr[j][k] = '\0';
      |             ~~~~~~~~~~~~~~~^~~~~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-13
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |......
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (4) following 'true' branch...
           |      |                  (7) following 'false' branch...
           |   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |                     |
           |      |                              |                     (5) ...to here
           |      |                              (6) this call could return NULL
           |   11 |     }
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'true' branch...
           |      |           (8) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (10) ...to here
           |      |           (11) following 'true' branch...
           |   14 |             splitArr[j][k] = '\0';
           |      |             ~~~~~~~~~~~~~~~~~~~~~
           |      |                     |      |
           |      |                     |      (13) '*splitArr_50 + _19 + (sizetype)k' could be NULL: unchecked value from (6)
           |      |                     (12) ...to here
           |
collected_code_3/problem-15-3.c:18:21: warning: use of uninitialized value '*splitArr_50 + _27' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   18 |             splitArr[j][k++] = str[i];
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-11
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'true' branch...
           |      |           (6) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (8) ...to here
           |      |           (9) following 'false' branch...
           |......
           |   18 |             splitArr[j][k++] = str[i];
           |      |             ~~~~~~~~~~~           ~
           |      |                     |             |
           |      |                     |             (10) ...to here
           |      |                     (11) use of uninitialized value '*splitArr_50 + _27' here
           |
collected_code_3/problem-15-3.c:18:21: warning: dereference of possibly-NULL 'splitArr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   18 |             splitArr[j][k++] = str[i];
      |             ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-11
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) this call could return NULL
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'true' branch...
           |      |           (6) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (8) ...to here
           |      |           (9) following 'false' branch...
           |......
           |   18 |             splitArr[j][k++] = str[i];
           |      |             ~~~~~~~~~~~           ~
           |      |                     |             |
           |      |                     |             (10) ...to here
           |      |                     (11) 'splitArr + (long unsigned int)j * 8' could be NULL: unchecked value from (4)
           |
collected_code_3/problem-15-3.c:18:30: warning: dereference of possibly-NULL '*splitArr_50 + _27 + (sizetype)k' [CWE-690] [-Wanalyzer-possible-null-dereference]
   18 |             splitArr[j][k++] = str[i];
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-13
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |......
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (4) following 'true' branch...
           |      |                  (7) following 'false' branch...
           |   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |                     |
           |      |                              |                     (5) ...to here
           |      |                              (6) this call could return NULL
           |   11 |     }
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'true' branch...
           |      |           (8) ...to here
           |   13 |         if(islower(str[i]) || str[i] == '\0') {
           |      |           ~           ~
           |      |           |           |
           |      |           |           (10) ...to here
           |      |           (11) following 'false' branch...
           |......
           |   18 |             splitArr[j][k++] = str[i];
           |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |    |
           |      |                              |    (12) ...to here
           |      |                              (13) '*splitArr_50 + _27 + (sizetype)k' could be NULL: unchecked value from (6)
           |
collected_code_3/problem-15-3.c: In function 'main':
collected_code_3/problem-15-3.c:29:20: warning: use of uninitialized value '*splitArr_21 + _2' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   29 |         if(splitArr[i][0] == '\0') {
      |            ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-8
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) region created on heap here
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'false' branch...
           |      |           (6) ...to here
           |......
           |   21 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (8) ...to here
           |
    <------+
    |
  'main': events 9-12
    |
    |   26 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (9) returning to 'main' from 'splitString'
    |   27 |     int i;
    |   28 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (10) following 'true' branch...
    |   29 |         if(splitArr[i][0] == '\0') {
    |      |            ~~~~~~~~~~~ 
    |      |                    |
    |      |                    (11) ...to here
    |      |                    (12) use of uninitialized value '*splitArr_21 + _2' here
    |
collected_code_3/problem-15-3.c:29:20: warning: dereference of possibly-NULL 'splitArr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   29 |         if(splitArr[i][0] == '\0') {
      |            ~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-8
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char** splitArr = (char**)malloc(sizeof(char*) * strlen(str));
           |      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (4) this call could return NULL
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (5) following 'false' branch...
           |......
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (7) following 'false' branch...
           |      |           (6) ...to here
           |......
           |   21 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (8) ...to here
           |
    <------+
    |
  'main': events 9-12
    |
    |   26 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (9) possible return of NULL to 'main' from 'splitString'
    |   27 |     int i;
    |   28 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (10) following 'true' branch...
    |   29 |         if(splitArr[i][0] == '\0') {
    |      |            ~~~~~~~~~~~ 
    |      |                    |
    |      |                    (11) ...to here
    |      |                    (12) 'splitArr + (long unsigned int)i * 8' could be NULL: unchecked value from (4)
    |
collected_code_3/problem-15-3.c:29:23: warning: use of uninitialized value '**_3' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   29 |         if(splitArr[i][0] == '\0') {
      |            ~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-10
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |......
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (4) following 'true' branch...
           |      |                  (7) following 'false' branch...
           |   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |                     |
           |      |                              |                     (5) ...to here
           |      |                              (6) region created on heap here
           |   11 |     }
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'false' branch...
           |      |           (8) ...to here
           |......
           |   21 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (10) ...to here
           |
    <------+
    |
  'main': events 11-14
    |
    |   26 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (11) returning to 'main' from 'splitString'
    |   27 |     int i;
    |   28 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (12) following 'true' branch...
    |   29 |         if(splitArr[i][0] == '\0') {
    |      |            ~~~~~~~~~~~~~~
    |      |                    |  |
    |      |                    |  (14) use of uninitialized value '**_3' here
    |      |                    (13) ...to here
    |
collected_code_3/problem-15-3.c:29:23: warning: dereference of possibly-NULL '*splitArr_21 + _2' [CWE-690] [-Wanalyzer-possible-null-dereference]
   29 |         if(splitArr[i][0] == '\0') {
      |            ~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   24 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   25 |     char str[] = "HelloWorld";
    |   26 |     char** splitArr = splitString(str);
    |      |                       ~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) calling 'splitString' from 'main'
    |
    +--> 'splitString': events 3-10
           |
           |    6 | char** splitString(char* str) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'splitString'
           |......
           |    9 |     for(i = 0; i < strlen(str); i++) {
           |      |                ~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (4) following 'true' branch...
           |      |                  (7) following 'false' branch...
           |   10 |         splitArr[i] = (char*)malloc(sizeof(char) * strlen(str));
           |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                              |                     |
           |      |                              |                     (5) ...to here
           |      |                              (6) this call could return NULL
           |   11 |     }
           |   12 |     for(i = 0; i <= strlen(str); i++) {
           |      |         ~~~~~  ~~~~~~~~~~~~~~~~
           |      |           |      |
           |      |           |      (9) following 'false' branch...
           |      |           (8) ...to here
           |......
           |   21 |     return splitArr;
           |      |            ~~~~~~~~
           |      |            |
           |      |            (10) ...to here
           |
    <------+
    |
  'main': events 11-14
    |
    |   26 |     char** splitArr = splitString(str);
    |      |                       ^~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (11) returning to 'main' from 'splitString'
    |   27 |     int i;
    |   28 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (12) following 'true' branch...
    |   29 |         if(splitArr[i][0] == '\0') {
    |      |            ~~~~~~~~~~~~~~
    |      |                    |  |
    |      |                    |  (14) '*splitArr_21 + _2' could be NULL: unchecked value from (6)
    |      |                    (13) ...to here
    |
