collected_code/problem-340-0.c: In function 'findSumOfThreeLowestPositiveNumbers':
collected_code/problem-340-0.c:24:32: warning: use of uninitialized value '*positiveNumbers[j]' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   24 |             if (positiveNumbers[j] < min) {
      |                 ~~~~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   38 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   42 |     int sum = findSumOfThreeLowestPositiveNumbers(numbers, size);
    |      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |               |
    |      |               (2) calling 'findSumOfThreeLowestPositiveNumbers' from 'main'
    |
    +--> 'findSumOfThreeLowestPositiveNumbers': events 3-17
           |
           |    3 | int findSumOfThreeLowestPositiveNumbers(int arr[], int size) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'findSumOfThreeLowestPositiveNumbers'
           |    4 |     int positiveNumbers[size];
           |      |         ~~~~~~~~~~~~~~~
           |      |         |
           |      |         (4) region created on stack here
           |......
           |    7 |     for (int i = 0; i < size; i++) {
           |      |                     ~~~~~~~~
           |      |                       |
           |      |                       (5) following 'true' branch (when 'i < size')...
           |      |                       (9) following 'false' branch (when 'i >= size')...
           |    8 |         if (arr[i] > 0) {
           |      |            ~   ~
           |      |            |   |
           |      |            |   (6) ...to here
           |      |            (7) following 'true' branch...
           |    9 |             positiveNumbers[positiveCount] = arr[i];
           |      |                                                 ~
           |      |                                                 |
           |      |                                                 (8) ...to here
           |......
           |   14 |     if (positiveCount < 3) {
           |      |        ~
           |      |        |
           |      |        (10) ...to here
           |      |        (11) following 'false' branch (when 'positiveCount > 2')...
           |......
           |   18 |     int sum = 0;
           |      |         ~~~
           |      |         |
           |      |         (12) ...to here
           |   19 |     for (int i = 0; i < 3; i++) {
           |      |                     ~~~~~
           |      |                       |
           |      |                       (13) following 'true' branch (when 'i <= 2')...
           |   20 |         int min = positiveNumbers[i];
           |      |             ~~~
           |      |             |
           |      |             (14) ...to here
           |......
           |   23 |         for (int j = i + 1; j < positiveCount; j++) {
           |      |                             ~~~~~~~~~~~~~~~~~
           |      |                               |
           |      |                               (15) following 'true' branch (when 'j < positiveCount')...
           |   24 |             if (positiveNumbers[j] < min) {
           |      |                 ~~~~~~~~~~~~~~~~~~
           |      |                                |
           |      |                                (16) ...to here
           |      |                                (17) use of uninitialized value '*positiveNumbers[j]' here
           |
