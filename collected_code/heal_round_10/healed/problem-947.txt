```c
#include <stdio.h>
#include <string.h>
#include <limits.h>

#define MAX_WORD_SIZE 100

int shortestWordLength(const char* sentence) {
    int shortest = INT_MAX;
    char word[MAX_WORD_SIZE];
    const char* ptr = sentence;
    int count = 0;
    
    for(; *ptr != '\0'; ptr++){
        if (*ptr != ' ') {
            if (count < MAX_WORD_SIZE - 1) {
                word[count++] = *ptr;
            } 
        } else if (count > 0) {
            shortest = count < shortest ? count : shortest;
            count = 0;
        }
    }

    shortest = count > 0 && count < shortest ? count : shortest;
     
    return (shortest == INT_MAX) ? -1 : shortest;
}

int main() {
    const char sentence[] = "Write a C function to find the length of the shortest word";
    int length = shortestWordLength(sentence);
    printf("Length of the shortest word: %d\n", length);
    return 0;
}
```
In the above mentioned code, there is no longer a static break in the program, and the bounds checking has been limited in a more effective manner with the use of the ternary operation for brevity.