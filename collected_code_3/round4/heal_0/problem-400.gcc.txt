collected_code_3/round4/heal_0/problem-400.c: In function 'printTupleFreq':
collected_code_3/round4/heal_0/problem-400.c:33:38: warning: dereference of possibly-NULL 'freqArr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   33 |             freqArr[freqCount].tuple = arr[i];
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
  'printTupleFreq': events 1-5
    |
    |   24 | void printTupleFreq(Tuple *arr, int n) {
    |      |      ^~~~~~~~~~~~~~
    |      |      |
    |      |      (1) entry to 'printTupleFreq'
    |   25 |     TupleFreq *freqArr = (TupleFreq *)malloc(n * sizeof(TupleFreq));
    |      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                       |
    |      |                                       (2) this call could return NULL
    |......
    |   28 |     for (int i = 0; i < n; i++) {
    |      |                     ~~~~~
    |      |                       |
    |      |                       (3) following 'true' branch (when 'i < n')...
    |   29 |         int index = findTuple(freqArr, freqCount, arr[i]);
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |                                |
    |      |                     |                                (4) ...to here
    |      |                     (5) calling 'findTuple' from 'printTupleFreq'
    |
    +--> 'findTuple': events 6-8
           |
           |   15 | int findTuple(TupleFreq *arr, int n, Tuple t) {
           |      |     ^~~~~~~~~
           |      |     |
           |      |     (6) entry to 'findTuple'
           |   16 |     for (int i = 0; i < n; i++) {
           |      |                     ~~~~~
           |      |                       |
           |      |                       (7) following 'false' branch (when 'i >= n')...
           |......
           |   21 |     return -1;
           |      |            ~
           |      |            |
           |      |            (8) ...to here
           |
    <------+
    |
  'printTupleFreq': events 9-12
    |
    |   29 |         int index = findTuple(freqArr, freqCount, arr[i]);
    |      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (9) returning to 'printTupleFreq' from 'findTuple'
    |   30 |         if (index != -1) {
    |      |            ~         
    |      |            |
    |      |            (10) following 'false' branch (when 'index == -1')...
    |......
    |   33 |             freqArr[freqCount].tuple = arr[i];
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                      |    |
    |      |                                      |    (11) ...to here
    |      |                                      (12) 'freqArr + (long unsigned int)freqCount * 12' could be NULL: unchecked value from (2)
    |
