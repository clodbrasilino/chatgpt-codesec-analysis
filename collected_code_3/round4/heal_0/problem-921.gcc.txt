collected_code_3/round4/heal_0/problem-921.c: In function 'chunk_tuples':
collected_code_3/round4/heal_0/problem-921.c:15:24: warning: dereference of possibly-NULL 'chunks' [CWE-690] [-Wanalyzer-possible-null-dereference]
   15 |         chunks[i].data = (int*)malloc(sizeof(int) * current_chunk_size);
      |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'chunk_tuples': events 1-4
    |
    |   11 |     Tuple* chunks = (Tuple*)malloc(sizeof(Tuple) * chunk_count);
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   12 | 
    |   13 |     for (int i = 0; i < chunk_count; i++) {
    |      |                     ~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < chunk_count')...
    |   14 |         int current_chunk_size = (i == chunk_count - 1 && tuples_size % chunk_size != 0) ? tuples_size % chunk_size : chunk_size;
    |      |                                        ~~~~~~~~~~~~~~~
    |      |                                                    |
    |      |                                                    (3) ...to here
    |   15 |         chunks[i].data = (int*)malloc(sizeof(int) * current_chunk_size);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (4) 'chunks + (long unsigned int)i * 16' could be NULL: unchecked value from (1)
    |
collected_code_3/round4/heal_0/problem-921.c:19:31: warning: dereference of possibly-NULL '*chunks_40 + _23.data + (long unsigned int)j * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |             chunks[i].data[j] = tuples[i * chunk_size + j].data[0];
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'chunk_tuples': events 1-6
    |
    |   13 |     for (int i = 0; i < chunk_count; i++) {
    |      |                     ~~^~~~~~~~~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < chunk_count')...
    |   14 |         int current_chunk_size = (i == chunk_count - 1 && tuples_size % chunk_size != 0) ? tuples_size % chunk_size : chunk_size;
    |      |                                        ~~~~~~~~~~~~~~~
    |      |                                                    |
    |      |                                                    (2) ...to here
    |   15 |         chunks[i].data = (int*)malloc(sizeof(int) * current_chunk_size);
    |      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                |
    |      |                                (3) this call could return NULL
    |......
    |   18 |         for (int j = 0; j < current_chunk_size; j++) {
    |      |                         ~~~~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (4) following 'true' branch (when 'j < current_chunk_size')...
    |   19 |             chunks[i].data[j] = tuples[i * chunk_size + j].data[0];
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                               |          |
    |      |                               |          (5) ...to here
    |      |                               (6) '*chunks_40 + _23.data + (long unsigned int)j * 4' could be NULL: unchecked value from (3)
    |
collected_code_3/round4/heal_0/problem-921.c: In function 'main':
collected_code_3/round4/heal_0/problem-921.c:31:24: warning: dereference of possibly-NULL 'tuples' [CWE-690] [-Wanalyzer-possible-null-dereference]
   31 |         tuples[i].data = (int*)malloc(sizeof(int));
      |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-4
    |
    |   28 |     Tuple* tuples = (Tuple*)malloc(sizeof(Tuple) * tuples_size);
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   29 | 
    |   30 |     for (int i = 0; i < tuples_size; i++) {
    |      |                     ~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < tuples_size')...
    |   31 |         tuples[i].data = (int*)malloc(sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |               |        |
    |      |               |        (4) 'tuples + (long unsigned int)i * 16' could be NULL: unchecked value from (1)
    |      |               (3) ...to here
    |
collected_code_3/round4/heal_0/problem-921.c:32:27: warning: dereference of possibly-NULL '*tuples_50 + _8.data' [CWE-690] [-Wanalyzer-possible-null-dereference]
   32 |         tuples[i].data[0] = i + 1;
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   30 |     for (int i = 0; i < tuples_size; i++) {
    |      |                     ~~^~~~~~~~~~~~~
    |      |                       |
    |      |                       (1) following 'true' branch (when 'i < tuples_size')...
    |   31 |         tuples[i].data = (int*)malloc(sizeof(int));
    |      |               ~                ~~~~~~~~~~~~~~~~~~~
    |      |               |                |
    |      |               (2) ...to here   (3) this call could return NULL
    |   32 |         tuples[i].data[0] = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                           |
    |      |                           (4) '*tuples_50 + _8.data' could be NULL: unchecked value from (3)
    |
