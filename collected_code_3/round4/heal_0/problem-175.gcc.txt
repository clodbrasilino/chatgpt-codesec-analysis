collected_code_3/round4/heal_0/problem-175.c: In function 'createStack':
collected_code_3/round4/heal_0/problem-175.c:13:21: warning: dereference of possibly-NULL 'stack' [CWE-690] [-Wanalyzer-possible-null-dereference]
   13 |     stack->capacity = capacity;
      |     ~~~~~~~~~~~~~~~~^~~~~~~~~~
  'areParenthesisBalanced': events 1-2
    |
    |   46 | int areParenthesisBalanced(char exp[]) {
    |      |     ^~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (1) entry to 'areParenthesisBalanced'
    |   47 |     int i = 0;
    |   48 |     Stack* stack = createStack(strlen(exp));
    |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                    |
    |      |                    (2) calling 'createStack' from 'areParenthesisBalanced'
    |
    +--> 'createStack': events 3-5
           |
           |   11 | Stack* createStack(unsigned capacity) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'createStack'
           |   12 |     Stack* stack = (Stack*) malloc(sizeof(Stack));
           |      |                             ~~~~~~~~~~~~~~~~~~~~~
           |      |                             |
           |      |                             (4) this call could return NULL
           |   13 |     stack->capacity = capacity;
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                     |
           |      |                     (5) 'stack' could be NULL: unchecked value from (4)
           |
collected_code_3/round4/heal_0/problem-175.c: In function 'push':
collected_code_3/round4/heal_0/problem-175.c:30:32: warning: dereference of possibly-NULL '*stack.array + (sizetype)*stack.top' [CWE-690] [-Wanalyzer-possible-null-dereference]
   30 |     stack->array[++stack->top] = item;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
  'areParenthesisBalanced': events 1-2
    |
    |   46 | int areParenthesisBalanced(char exp[]) {
    |      |     ^~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (1) entry to 'areParenthesisBalanced'
    |   47 |     int i = 0;
    |   48 |     Stack* stack = createStack(strlen(exp));
    |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                    |
    |      |                    (2) calling 'createStack' from 'areParenthesisBalanced'
    |
    +--> 'createStack': events 3-4
           |
           |   11 | Stack* createStack(unsigned capacity) {
           |      |        ^~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'createStack'
           |......
           |   15 |     stack->array = (char*) malloc(stack->capacity * sizeof(char));
           |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                            |
           |      |                            (4) this call could return NULL
           |
    <------+
    |
  'areParenthesisBalanced': events 5-10
    |
    |   48 |     Stack* stack = createStack(strlen(exp));
    |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~
    |      |                    |
    |      |                    (5) returning to 'areParenthesisBalanced' from 'createStack'
    |   49 |     while (exp[i]) {
    |      |            ~~~      
    |      |            |
    |      |            (6) following 'true' branch...
    |   50 |         if (exp[i] == '(')
    |      |            ~   ~    
    |      |            |   |
    |      |            |   (7) ...to here
    |      |            (8) following 'true' branch...
    |   51 |             push(stack, exp[i]);
    |      |             ~~~~~~~~~~~~~~~~~~~
    |      |             |              |
    |      |             |              (9) ...to here
    |      |             (10) calling 'push' from 'areParenthesisBalanced'
    |
    +--> 'push': events 11-14
           |
           |   27 | void push(Stack* stack, char item) {
           |      |      ^~~~
           |      |      |
           |      |      (11) entry to 'push'
           |   28 |     if (isFull(stack))
           |      |        ~
           |      |        |
           |      |        (12) following 'false' branch...
           |   29 |         return;
           |   30 |     stack->array[++stack->top] = item;
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |          |                     |
           |      |          (13) ...to here       (14) '*stack.array + (sizetype)*stack.top' could be NULL: unchecked value from (4)
           |
collected_code_3/round4/heal_0/problem-175.c: In function 'areParenthesisBalanced':
collected_code_3/round4/heal_0/problem-175.c:62:16: warning: leak of 'stack' [CWE-401] [-Wanalyzer-malloc-leak]
   62 |         return 1;
      |                ^
  'main': events 1-2
    |
    |   67 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   68 |     char exp[100] = "{()}[]";
    |   69 |     if (areParenthesisBalanced(exp))
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (2) calling 'areParenthesisBalanced' from 'main'
    |
    +--> 'areParenthesisBalanced': events 3-4
           |
           |   46 | int areParenthesisBalanced(char exp[]) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'areParenthesisBalanced'
           |   47 |     int i = 0;
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (4) calling 'createStack' from 'areParenthesisBalanced'
           |
           +--> 'createStack': events 5-7
                  |
                  |   11 | Stack* createStack(unsigned capacity) {
                  |      |        ^~~~~~~~~~~
                  |      |        |
                  |      |        (5) entry to 'createStack'
                  |   12 |     Stack* stack = (Stack*) malloc(sizeof(Stack));
                  |      |                             ~~~~~~~~~~~~~~~~~~~~~
                  |      |                             |
                  |      |                             (6) allocated here
                  |   13 |     stack->capacity = capacity;
                  |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
                  |      |                     |
                  |      |                     (7) assuming 'stack' is non-NULL
                  |
           <------+
           |
         'areParenthesisBalanced': events 8-17
           |
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (8) returning to 'areParenthesisBalanced' from 'createStack'
           |   49 |     while (exp[i]) {
           |      |            ~~~      
           |      |            |
           |      |            (9) following 'true' branch...
           |   50 |         if (exp[i] == '(')
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (10) ...to here
           |      |            (11) following 'false' branch...
           |   51 |             push(stack, exp[i]);
           |   52 |         if (exp[i] == ')') {
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (12) ...to here
           |      |            (13) following 'false' branch...
           |......
           |   59 |         i++;
           |      |         ~~~         
           |      |          |
           |      |          (14) ...to here
           |   60 |     }
           |   61 |     if (isEmpty(stack))
           |      |        ~            
           |      |        |
           |      |        (15) following 'true' branch...
           |   62 |         return 1;
           |      |                ~    
           |      |                |
           |      |                (16) ...to here
           |      |                (17) 'stack' leaks here; was allocated at (6)
           |
collected_code_3/round4/heal_0/problem-175.c:62:16: warning: leak of '<unknown>' [CWE-401] [-Wanalyzer-malloc-leak]
   62 |         return 1;
      |                ^
  'main': events 1-2
    |
    |   67 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   68 |     char exp[100] = "{()}[]";
    |   69 |     if (areParenthesisBalanced(exp))
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (2) calling 'areParenthesisBalanced' from 'main'
    |
    +--> 'areParenthesisBalanced': events 3-4
           |
           |   46 | int areParenthesisBalanced(char exp[]) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'areParenthesisBalanced'
           |   47 |     int i = 0;
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (4) calling 'createStack' from 'areParenthesisBalanced'
           |
           +--> 'createStack': events 5-6
                  |
                  |   11 | Stack* createStack(unsigned capacity) {
                  |      |        ^~~~~~~~~~~
                  |      |        |
                  |      |        (5) entry to 'createStack'
                  |......
                  |   15 |     stack->array = (char*) malloc(stack->capacity * sizeof(char));
                  |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  |      |                            |
                  |      |                            (6) allocated here
                  |
           <------+
           |
         'areParenthesisBalanced': events 7-16
           |
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (7) returning to 'areParenthesisBalanced' from 'createStack'
           |   49 |     while (exp[i]) {
           |      |            ~~~      
           |      |            |
           |      |            (8) following 'true' branch...
           |   50 |         if (exp[i] == '(')
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (9) ...to here
           |      |            (10) following 'false' branch...
           |   51 |             push(stack, exp[i]);
           |   52 |         if (exp[i] == ')') {
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (11) ...to here
           |      |            (12) following 'false' branch...
           |......
           |   59 |         i++;
           |      |         ~~~         
           |      |          |
           |      |          (13) ...to here
           |   60 |     }
           |   61 |     if (isEmpty(stack))
           |      |        ~            
           |      |        |
           |      |        (14) following 'true' branch...
           |   62 |         return 1;
           |      |                ~    
           |      |                |
           |      |                (15) ...to here
           |      |                (16) '<unknown>' leaks here; was allocated at (6)
           |
collected_code_3/round4/heal_0/problem-175.c:64:16: warning: leak of '<unknown>' [CWE-401] [-Wanalyzer-malloc-leak]
   64 |         return 0;
      |                ^
  'main': events 1-2
    |
    |   67 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   68 |     char exp[100] = "{()}[]";
    |   69 |     if (areParenthesisBalanced(exp))
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (2) calling 'areParenthesisBalanced' from 'main'
    |
    +--> 'areParenthesisBalanced': events 3-4
           |
           |   46 | int areParenthesisBalanced(char exp[]) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'areParenthesisBalanced'
           |   47 |     int i = 0;
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (4) calling 'createStack' from 'areParenthesisBalanced'
           |
           +--> 'createStack': events 5-6
                  |
                  |   11 | Stack* createStack(unsigned capacity) {
                  |      |        ^~~~~~~~~~~
                  |      |        |
                  |      |        (5) entry to 'createStack'
                  |......
                  |   15 |     stack->array = (char*) malloc(stack->capacity * sizeof(char));
                  |      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  |      |                            |
                  |      |                            (6) allocated here
                  |
           <------+
           |
         'areParenthesisBalanced': events 7-16
           |
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (7) returning to 'areParenthesisBalanced' from 'createStack'
           |   49 |     while (exp[i]) {
           |      |            ~~~      
           |      |            |
           |      |            (8) following 'true' branch...
           |      |            (14) following 'true' branch...
           |   50 |         if (exp[i] == '(')
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (9) ...to here
           |      |            |   (15) ...to here
           |      |            (10) following 'false' branch...
           |   51 |             push(stack, exp[i]);
           |      |             ~~~~~~~~~~~~~~~~~~~
           |      |             |
           |      |             (16) calling 'push' from 'areParenthesisBalanced'
           |   52 |         if (exp[i] == ')') {
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (11) ...to here
           |      |            (12) following 'false' branch...
           |......
           |   59 |         i++;
           |      |         ~~~         
           |      |          |
           |      |          (13) ...to here
           |
           +--> 'push': events 17-18
                  |
                  |   27 | void push(Stack* stack, char item) {
                  |      |      ^~~~
                  |      |      |
                  |      |      (17) entry to 'push'
                  |......
                  |   30 |     stack->array[++stack->top] = item;
                  |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  |      |                                |
                  |      |                                (18) assuming '*stack.array + (sizetype)*stack.top' is non-NULL
                  |
           <------+
           |
         'areParenthesisBalanced': events 19-22
           |
           |   51 |             push(stack, exp[i]);
           |      |             ^~~~~~~~~~~~~~~~~~~
           |      |             |
           |      |             (19) returning to 'areParenthesisBalanced' from 'push'
           |......
           |   61 |     if (isEmpty(stack))
           |      |        ~     
           |      |        |
           |      |        (20) following 'false' branch...
           |......
           |   64 |         return 0;
           |      |                ~
           |      |                |
           |      |                (21) ...to here
           |      |                (22) '<unknown>' leaks here; was allocated at (6)
           |
collected_code_3/round4/heal_0/problem-175.c:64:16: warning: leak of 'stack' [CWE-401] [-Wanalyzer-malloc-leak]
   64 |         return 0;
      |                ^
  'main': events 1-2
    |
    |   67 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   68 |     char exp[100] = "{()}[]";
    |   69 |     if (areParenthesisBalanced(exp))
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (2) calling 'areParenthesisBalanced' from 'main'
    |
    +--> 'areParenthesisBalanced': events 3-4
           |
           |   46 | int areParenthesisBalanced(char exp[]) {
           |      |     ^~~~~~~~~~~~~~~~~~~~~~
           |      |     |
           |      |     (3) entry to 'areParenthesisBalanced'
           |   47 |     int i = 0;
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (4) calling 'createStack' from 'areParenthesisBalanced'
           |
           +--> 'createStack': events 5-7
                  |
                  |   11 | Stack* createStack(unsigned capacity) {
                  |      |        ^~~~~~~~~~~
                  |      |        |
                  |      |        (5) entry to 'createStack'
                  |   12 |     Stack* stack = (Stack*) malloc(sizeof(Stack));
                  |      |                             ~~~~~~~~~~~~~~~~~~~~~
                  |      |                             |
                  |      |                             (6) allocated here
                  |   13 |     stack->capacity = capacity;
                  |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
                  |      |                     |
                  |      |                     (7) assuming 'stack' is non-NULL
                  |
           <------+
           |
         'areParenthesisBalanced': events 8-19
           |
           |   48 |     Stack* stack = createStack(strlen(exp));
           |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~
           |      |                    |
           |      |                    (8) returning to 'areParenthesisBalanced' from 'createStack'
           |   49 |     while (exp[i]) {
           |      |            ~~~      
           |      |            |
           |      |            (9) following 'true' branch...
           |      |            (15) following 'true' branch...
           |   50 |         if (exp[i] == '(')
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (10) ...to here
           |      |            |   (16) ...to here
           |      |            (11) following 'false' branch...
           |   51 |             push(stack, exp[i]);
           |   52 |         if (exp[i] == ')') {
           |      |            ~   ~    
           |      |            |   |
           |      |            |   (12) ...to here
           |      |            (13) following 'false' branch...
           |......
           |   59 |         i++;
           |      |         ~~~         
           |      |          |
           |      |          (14) ...to here
           |   60 |     }
           |   61 |     if (isEmpty(stack))
           |      |        ~            
           |      |        |
           |      |        (17) following 'false' branch...
           |......
           |   64 |         return 0;
           |      |                ~    
           |      |                |
           |      |                (18) ...to here
           |      |                (19) 'stack' leaks here; was allocated at (6)
           |
