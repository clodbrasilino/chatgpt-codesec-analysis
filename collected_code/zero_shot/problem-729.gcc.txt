collected_code/problem-729-0.c: In function 'addTwoLists':
collected_code/problem-729-0.c:10:48: warning: implicit declaration of function 'malloc' [-Wimplicit-function-declaration]
   10 |     struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
      |                                                ^~~~~~
collected_code/problem-729-0.c:2:1: note: include '<stdlib.h>' or provide a declaration of 'malloc'
    1 | #include <stdio.h>
  +++ |+#include <stdlib.h>
    2 | 
collected_code/problem-729-0.c:10:48: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
   10 |     struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
      |                                                ^~~~~~
collected_code/problem-729-0.c:10:48: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code/problem-729-0.c:38:5: warning: implicit declaration of function 'free' [-Wimplicit-function-declaration]
   38 |     free(dummy);
      |     ^~~~
collected_code/problem-729-0.c:38:5: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code/problem-729-0.c:38:5: warning: incompatible implicit declaration of built-in function 'free' [-Wbuiltin-declaration-mismatch]
collected_code/problem-729-0.c:38:5: note: include '<stdlib.h>' or provide a declaration of 'free'
collected_code/problem-729-0.c: In function 'main':
collected_code/problem-729-0.c:44:45: warning: incompatible implicit declaration of built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
   44 |     struct ListNode* l1 = (struct ListNode*)malloc(sizeof(struct ListNode));
      |                                             ^~~~~~
collected_code/problem-729-0.c:44:45: note: include '<stdlib.h>' or provide a declaration of 'malloc'
collected_code/problem-729-0.c: In function 'addTwoLists':
collected_code/problem-729-0.c:30:22: warning: dereference of possibly-NULL 'newNode' [CWE-690] [-Wanalyzer-possible-null-dereference]
   30 |         newNode->val = sum % 10;
      |         ~~~~~~~~~~~~~^~~~~~~~~~
  'addTwoLists': events 1-6
    |
    |   14 |     while (l1 || l2 || carry) {
    |      |            ~~~~~~~~~^~~~~~~~
    |      |                     |
    |      |                     (1) following 'true' branch (when 'l1' is non-NULL)...
    |   15 |         int sum = carry;
    |      |             ~~~      
    |      |             |
    |      |             (2) ...to here
    |   16 | 
    |   17 |         if (l1) {
    |      |            ~         
    |      |            |
    |      |            (3) following 'true' branch (when 'l1' is non-NULL)...
    |   18 |             sum += l1->val;
    |      |                    ~~~~~~~
    |      |                      |
    |      |                      (4) ...to here
    |......
    |   29 |         struct ListNode* newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                                      |
    |      |                                                      (5) this call could return NULL
    |   30 |         newNode->val = sum % 10;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~
    |      |                      |
    |      |                      (6) 'newNode' could be NULL: unchecked value from (5)
    |
collected_code/problem-729-0.c:33:23: warning: dereference of possibly-NULL 'current' [CWE-690] [-Wanalyzer-possible-null-dereference]
   33 |         current->next = newNode;
      |         ~~~~~~~~~~~~~~^~~~~~~~~
  'addTwoLists': events 1-6
    |
    |   10 |     struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                                |
    |      |                                                (1) this call could return NULL
    |......
    |   14 |     while (l1 || l2 || carry) {
    |      |            ~~~~~~~~~~~~~~~~~                    
    |      |                     |
    |      |                     (2) following 'true' branch (when 'l1' is non-NULL)...
    |   15 |         int sum = carry;
    |      |             ~~~                                 
    |      |             |
    |      |             (3) ...to here
    |   16 | 
    |   17 |         if (l1) {
    |      |            ~                                    
    |      |            |
    |      |            (4) following 'true' branch (when 'l1' is non-NULL)...
    |   18 |             sum += l1->val;
    |      |                    ~~~~~~~                      
    |      |                      |
    |      |                      (5) ...to here
    |......
    |   33 |         current->next = newNode;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~                 
    |      |                       |
    |      |                       (6) 'current' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:37:22: warning: use of uninitialized value '*dummy.next' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   37 |     struct ListNode* result = dummy->next;
      |                      ^~~~~~
  'addTwoLists': events 1-4
    |
    |   10 |     struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                                |
    |      |                                                (1) region created on heap here
    |......
    |   14 |     while (l1 || l2 || carry) {
    |      |            ~~~~~~~~~~~~~~~~~                    
    |      |                     |
    |      |                     (2) following 'false' branch...
    |......
    |   37 |     struct ListNode* result = dummy->next;
    |      |                      ~~~~~~                     
    |      |                      |
    |      |                      (3) ...to here
    |      |                      (4) use of uninitialized value '*dummy.next' here
    |
collected_code/problem-729-0.c:37:22: warning: dereference of possibly-NULL 'dummy' [CWE-690] [-Wanalyzer-possible-null-dereference]
   37 |     struct ListNode* result = dummy->next;
      |                      ^~~~~~
  'addTwoLists': events 1-4
    |
    |   10 |     struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                                |
    |      |                                                (1) this call could return NULL
    |......
    |   14 |     while (l1 || l2 || carry) {
    |      |            ~~~~~~~~~~~~~~~~~                    
    |      |                     |
    |      |                     (2) following 'false' branch...
    |......
    |   37 |     struct ListNode* result = dummy->next;
    |      |                      ~~~~~~                     
    |      |                      |
    |      |                      (3) ...to here
    |      |                      (4) 'dummy' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c: In function 'main':
collected_code/problem-729-0.c:45:13: warning: dereference of possibly-NULL 'l1' [CWE-690] [-Wanalyzer-possible-null-dereference]
   45 |     l1->val = 2;
      |     ~~~~~~~~^~~
  'main': events 1-2
    |
    |   44 |     struct ListNode* l1 = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                             |
    |      |                                             (1) this call could return NULL
    |   45 |     l1->val = 2;
    |      |     ~~~~~~~~~~~                              
    |      |             |
    |      |             (2) 'l1' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:47:19: warning: dereference of possibly-NULL '*l1.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   47 |     l1->next->val = 4;
      |     ~~~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   46 |     l1->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                  |
    |      |                                  (1) this call could return NULL
    |   47 |     l1->next->val = 4;
    |      |     ~~~~~~~~~~~~~~~~~             
    |      |                   |
    |      |                   (2) '*l1.next' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:49:25: warning: dereference of possibly-NULL '*l1_22->next.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   49 |     l1->next->next->val = 3;
      |     ~~~~~~~~~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   48 |     l1->next->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                        |
    |      |                                        (1) this call could return NULL
    |   49 |     l1->next->next->val = 3;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~             
    |      |                         |
    |      |                         (2) '*l1_22->next.next' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:53:13: warning: dereference of possibly-NULL 'l2' [CWE-690] [-Wanalyzer-possible-null-dereference]
   53 |     l2->val = 5;
      |     ~~~~~~~~^~~
  'main': events 1-2
    |
    |   52 |     struct ListNode* l2 = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                             |
    |      |                                             (1) this call could return NULL
    |   53 |     l2->val = 5;
    |      |     ~~~~~~~~~~~                              
    |      |             |
    |      |             (2) 'l2' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:55:19: warning: dereference of possibly-NULL '*l2.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   55 |     l2->next->val = 6;
      |     ~~~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   54 |     l2->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                  |
    |      |                                  (1) this call could return NULL
    |   55 |     l2->next->val = 6;
    |      |     ~~~~~~~~~~~~~~~~~             
    |      |                   |
    |      |                   (2) '*l2.next' could be NULL: unchecked value from (1)
    |
collected_code/problem-729-0.c:57:25: warning: dereference of possibly-NULL '*l2_32->next.next' [CWE-690] [-Wanalyzer-possible-null-dereference]
   57 |     l2->next->next->val = 4;
      |     ~~~~~~~~~~~~~~~~~~~~^~~
  'main': events 1-2
    |
    |   56 |     l2->next->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    |      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                        |
    |      |                                        (1) this call could return NULL
    |   57 |     l2->next->next->val = 4;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~             
    |      |                         |
    |      |                         (2) '*l2_32->next.next' could be NULL: unchecked value from (1)
    |
