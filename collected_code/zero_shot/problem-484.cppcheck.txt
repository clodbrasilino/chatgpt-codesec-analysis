collected_code/problem-484-0.c:12:23: error: Cannot determine that 'tuple1[i]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            if (tuple1[i] == tuple2[j]) {
                      ^
collected_code/problem-484-0.c:12:36: error: Cannot determine that 'tuple2[j]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            if (tuple1[i] == tuple2[j]) {
                                   ^
collected_code/problem-484-0.c:19:34: error: Cannot determine that 'tuple1[i]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            result[k][0] = tuple1[i];
                                 ^
collected_code/problem-484-0.c:20:34: error: Cannot determine that 'tuple2[i]' is initialized (since function parameter is not 'const' it is assumed it points at uninitialized data) [premium-bughuntingUninitNonConstArg]
            result[k][1] = tuple2[i];
                                 ^
collected_code/problem-484-0.c:27:38: error: Cannot determine that 'result[i][0]' is initialized [premium-bughuntingUninit]
        printf("(%d, %d) ", result[i][0], result[i][1]);
                                     ^
collected_code/problem-484-0.c:27:52: error: Cannot determine that 'result[i][1]' is initialized [premium-bughuntingUninit]
        printf("(%d, %d) ", result[i][0], result[i][1]);
                                                   ^
