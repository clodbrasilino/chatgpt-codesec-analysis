```C
#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int* data;
    int len;
} List;

int compare(const void* a, const void* b) {
    List* listA = (List*)a;
    List* listB = (List*)b;

    if (listA->len < listB->len) return -1;
    if (listA->len > listB->len) return 1;

    for (int i = 0; i < listA->len; i++) {
        if (listA->data[i] < listB->data[i]) return -1;
        if (listA->data[i] > listB->data[i]) return 1;
    }

    return 0;
}

void sortListOfLists(List* lists, int size) {
    qsort(lists, size, sizeof(List), compare);
}

int main() {
    int data1[] = {1, 2, 3};
    int data2[] = {1, 2};
    int data3[] = {1, 2, 3, 4};
    int data4[] = {1, 2, 3, 4, 5};

    List lists[] = {
        {data1, sizeof(data1) / sizeof(int)},
        {data2, sizeof(data2) / sizeof(int)},
        {data3, sizeof(data3) / sizeof(int)},
        {data4, sizeof(data4) / sizeof(int)}
    };

    int size = sizeof(lists) / sizeof(List);

    sortListOfLists(lists, size);

    for (int i = 0; i < size; i++) {
        for (int j = 0; j < lists[i].len; j++) {
            printf("%d ", lists[i].data[j]);
        }
        printf("\n");
    }

    return 0;
}
```