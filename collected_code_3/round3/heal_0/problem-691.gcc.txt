collected_code_3/problem-691-3.c: In function 'groupBySecond':
collected_code_3/problem-691-3.c:17:19: warning: dereference of possibly-NULL 'groups' [CWE-690] [-Wanalyzer-possible-null-dereference]
   17 |         groups[i] = NULL;
      |                   ^
  'groupBySecond': events 1-3
    |
    |   15 |     Node** groups = (Node**)malloc(sizeof(Node*) * size);
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   16 |     for(int i = 0; i < size; i++) {
    |      |                    ~~~~~~~~  
    |      |                      |
    |      |                      (2) following 'true' branch (when 'i < size')...
    |   17 |         groups[i] = NULL;
    |      |               ~              
    |      |               |
    |      |               (3) ...to here
    |
  'groupBySecond': event 4
    |
    |   17 |         groups[i] = NULL;
    |      |                   ^
    |      |                   |
    |      |                   (4) 'groups + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-691-3.c:22:23: warning: dereference of possibly-NULL 'newNode' [CWE-690] [-Wanalyzer-possible-null-dereference]
   22 |         newNode->data = tuples[i].first;
      |         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   42 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   46 |     Node** groups = groupBySecond(tuples, size);
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (2) calling 'groupBySecond' from 'main'
    |
    +--> 'groupBySecond': events 3-19
           |
           |   14 | Node** groupBySecond(Tuple* tuples, int size) {
           |      |        ^~~~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'groupBySecond'
           |   15 |     Node** groups = (Node**)malloc(sizeof(Node*) * size);
           |   16 |     for(int i = 0; i < size; i++) {
           |      |                    ~~~~~~~~
           |      |                      |
           |      |                      (4) following 'true' branch (when 'i < size')...
           |      |                      (6) following 'true' branch (when 'i < size')...
           |      |                      (8) following 'true' branch (when 'i < size')...
           |      |                      (10) following 'true' branch (when 'i < size')...
           |      |                      (12) following 'true' branch (when 'i < size')...
           |      |                      (14) following 'false' branch (when 'i >= size')...
           |   17 |         groups[i] = NULL;
           |      |               ~
           |      |               |
           |      |               (5) ...to here
           |      |               (7) ...to here
           |      |               (9) ...to here
           |      |               (11) ...to here
           |      |               (13) ...to here
           |......
           |   20 |     for(int i = 0; i < size; i++) {
           |      |             ~      ~~~~~~~~
           |      |             |        |
           |      |             |        (16) following 'true' branch (when 'i < size')...
           |      |             (15) ...to here
           |   21 |         Node* newNode = (Node*)malloc(sizeof(Node));
           |      |                                ~~~~~~~~~~~~~~~~~~~~
           |      |                                |
           |      |                                (17) ...to here
           |      |                                (18) this call could return NULL
           |   22 |         newNode->data = tuples[i].first;
           |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (19) 'newNode' could be NULL: unchecked value from (18)
           |
