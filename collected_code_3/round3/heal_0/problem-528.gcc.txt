collected_code_3/problem-528-3.c: In function 'findMinLengthLists':
collected_code_3/problem-528-3.c:21:42: warning: dereference of possibly-NULL 'minLengthLists' [CWE-690] [-Wanalyzer-possible-null-dereference]
   21 |             minLengthLists[*numMinLists] = lists[i];
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
  'findMinLengthLists': events 1-6
    |
    |   17 |     List **minLengthLists = malloc(numLists * sizeof(List *));
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   18 |     *numMinLists = 0;
    |   19 |     for(int i = 0; i < numLists; i++) {
    |      |                    ~~~~~~~~~~~~
    |      |                      |
    |      |                      (2) following 'true' branch (when 'i < numLists')...
    |   20 |         if(lists[i]->length == minLength) {
    |      |           ~     ~            
    |      |           |     |
    |      |           |     (3) ...to here
    |      |           (4) following 'true' branch...
    |   21 |             minLengthLists[*numMinLists] = lists[i];
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                          |      |
    |      |                                          |      (5) ...to here
    |      |                                          (6) 'minLengthLists + (long unsigned int)*numMinLists * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-528-3.c: In function 'main':
collected_code_3/problem-528-3.c:33:18: warning: dereference of possibly-NULL 'lists' [CWE-690] [-Wanalyzer-possible-null-dereference]
   33 |         lists[i] = malloc(sizeof(List));
      |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-4
    |
    |   31 |     List **lists = malloc(numLists * sizeof(List *));
    |      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                    |
    |      |                    (1) this call could return NULL
    |   32 |     for(int i = 0; i < numLists; i++) {
    |      |                    ~~~~~~~~~~~~
    |      |                      |
    |      |                      (2) following 'true' branch (when 'i < numLists')...
    |   33 |         lists[i] = malloc(sizeof(List));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |              |   |
    |      |              |   (4) 'lists + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |      |              (3) ...to here
    |
collected_code_3/problem-528-3.c:34:26: warning: dereference of possibly-NULL '*lists_74 + _8' [CWE-690] [-Wanalyzer-possible-null-dereference]
   34 |         lists[i]->length = i + 1;
      |         ~~~~~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   32 |     for(int i = 0; i < numLists; i++) {
    |      |                    ~~^~~~~~~~~~
    |      |                      |
    |      |                      (1) following 'true' branch (when 'i < numLists')...
    |   33 |         lists[i] = malloc(sizeof(List));
    |      |              ~     ~~~~~~~~~~~~~~~~~~~~
    |      |              |     |
    |      |              |     (3) this call could return NULL
    |      |              (2) ...to here
    |   34 |         lists[i]->length = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                          |
    |      |                          (4) '*lists_74 + _8' could be NULL: unchecked value from (3)
    |
collected_code_3/problem-528-3.c:37:35: warning: dereference of possibly-NULL '**_26.elements + (long unsigned int)j * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   37 |             lists[i]->elements[j] = j;
      |             ~~~~~~~~~~~~~~~~~~~~~~^~~
  'main': events 1-6
    |
    |   32 |     for(int i = 0; i < numLists; i++) {
    |      |                    ~~^~~~~~~~~~
    |      |                      |
    |      |                      (1) following 'true' branch (when 'i < numLists')...
    |   33 |         lists[i] = malloc(sizeof(List));
    |      |              ~        
    |      |              |
    |      |              (2) ...to here
    |   34 |         lists[i]->length = i + 1;
    |   35 |         lists[i]->elements = malloc(lists[i]->length * sizeof(int));
    |      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |
    |      |                              (3) this call could return NULL
    |   36 |         for(int j = 0; j < lists[i]->length; j++) {
    |      |                        ~~~~~~~~~~~~~~~~~~~~
    |      |                          |
    |      |                          (4) following 'true' branch...
    |   37 |             lists[i]->elements[j] = j;
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                  |                |
    |      |                  (5) ...to here   (6) '**_26.elements + (long unsigned int)j * 4' could be NULL: unchecked value from (3)
    |
