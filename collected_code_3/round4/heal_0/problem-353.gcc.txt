collected_code_3/round4/heal_0/problem-353.c: In function 'createNestedList':
collected_code_3/round4/heal_0/problem-353.c:12:16: warning: dereference of possibly-NULL 'list' [CWE-690] [-Wanalyzer-possible-null-dereference]
   12 |     list->rows = rows;
      |     ~~~~~~~~~~~^~~~~~
  'createNestedList': events 1-2
    |
    |   11 |     NestedList* list = malloc(sizeof(NestedList));
    |      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (1) this call could return NULL
    |   12 |     list->rows = rows;
    |      |     ~~~~~~~~~~~~~~~~~   
    |      |                |
    |      |                (2) 'list' could be NULL: unchecked value from (1)
    |
collected_code_3/round4/heal_0/problem-353.c:16:23: warning: dereference of possibly-NULL '*list.data + (long unsigned int)i * 8' [CWE-690] [-Wanalyzer-possible-null-dereference]
   16 |         list->data[i] = malloc(cols * sizeof(int));
      |         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'createNestedList': events 1-4
    |
    |   14 |     list->data = malloc(rows * sizeof(int*));
    |      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (1) this call could return NULL
    |   15 |     for (int i = 0; i < rows; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < rows')...
    |   16 |         list->data[i] = malloc(cols * sizeof(int));
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                       | |
    |      |                       | (3) ...to here
    |      |                       (4) '*list.data + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/round4/heal_0/problem-353.c: In function 'main':
collected_code_3/round4/heal_0/problem-353.c:43:30: warning: dereference of possibly-NULL '*_3 + _5 + (long unsigned int)j * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   43 |             list->data[i][j] = i * list->cols + j;
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   39 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   40 |     NestedList* list = createNestedList(3, 3);
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (2) calling 'createNestedList' from 'main'
    |
    +--> 'createNestedList': events 3-12
           |
           |   10 | NestedList* createNestedList(int rows, int cols) {
           |      |             ^~~~~~~~~~~~~~~~
           |      |             |
           |      |             (3) entry to 'createNestedList'
           |......
           |   15 |     for (int i = 0; i < rows; i++) {
           |      |                     ~~~~~~~~
           |      |                       |
           |      |                       (4) following 'true' branch (when 'i < rows')...
           |      |                       (7) following 'true' branch (when 'i < rows')...
           |      |                       (9) following 'true' branch (when 'i < rows')...
           |      |                       (11) following 'false' branch (when 'i >= rows')...
           |   16 |         list->data[i] = malloc(cols * sizeof(int));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |
           |      |                         (5) ...to here
           |      |                         (6) this call could return NULL
           |      |                         (8) ...to here
           |      |                         (10) ...to here
           |   17 |     }
           |   18 |     return list;
           |      |            ~~~~
           |      |            |
           |      |            (12) ...to here
           |
    <------+
    |
  'main': events 13-18
    |
    |   40 |     NestedList* list = createNestedList(3, 3);
    |      |                        ^~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (13) returning to 'main' from 'createNestedList'
    |   41 |     for (int i = 0; i < list->rows; i++) {
    |      |                     ~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (14) following 'true' branch...
    |   42 |         for (int j = 0; j < list->cols; j++) {
    |      |                  ~      ~~~~~~~~~~~~~~
    |      |                  |        |
    |      |                  |        (16) following 'true' branch...
    |      |                  (15) ...to here
    |   43 |             list->data[i][j] = i * list->cols + j;
    |      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                              |         |
    |      |                              |         (17) ...to here
    |      |                              (18) '*_3 + _5 + (long unsigned int)j * 4' could be NULL: unchecked value from (6)
    |
