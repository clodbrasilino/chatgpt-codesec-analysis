collected_code_3/problem-114-1.c: In function 'assignFrequency':
collected_code_3/problem-114-1.c:23:23: warning: leak of '<unknown>' [CWE-401] [-Wanalyzer-malloc-leak]
   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
      |     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   35 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (2) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 3-7
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (3) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~
           |      |                      |
           |      |                      (4) following 'false' branch...
           |......
           |   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |                                    |
           |      |                         |                                    (5) ...to here
           |      |                         (6) when 'realloc' succeeds, moving buffer
           |   24 |     tupleList->tuples[tupleList->size].key = malloc(strlen(key) + 1);
           |      |                                              ~~~~~~~~~~~~~~~~~~~~~~~
           |      |                                              |
           |      |                                              (7) allocated here
           |
         'assignFrequency': event 8
           |
           |   25 |     strcpy(tupleList->tuples[tupleList->size].key, key);
           |      |     ^~~~~~
           |      |     |
           |      |     (8) assuming '<unknown>' is non-NULL
           |
    <------+
    |
  'main': events 9-10
    |
    |   35 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (9) returning to 'main' from 'assignFrequency'
    |   36 |     assignFrequency(&tupleList, "tuple2", 10);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (10) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 11-16
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (11) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~  ~~~
           |      |                      |                   |
           |      |                      |                   (15) ...to here
           |      |                      (12) following 'true' branch...
           |   17 |         if(strcmp(tupleList->tuples[i].key, key) == 0) {
           |      |           ~       ~~~~~~~~~~~~~~~~~
           |      |           |                |
           |      |           |                (13) ...to here
           |      |           (14) following 'false' branch (when the strings are non-equal)...
           |......
           |   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       |
           |      |                       (16) '<unknown>' leaks here; was allocated at (7)
           |
collected_code_3/problem-114-1.c:23:23: warning: leak of 'tupleList.tuples' [CWE-401] [-Wanalyzer-malloc-leak]
   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
      |     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   35 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (2) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 3-7
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (3) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~
           |      |                      |
           |      |                      (4) following 'false' branch...
           |......
           |   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |                                    |
           |      |                         (6) allocated here                   (5) ...to here
           |      |                         (7) when 'realloc' succeeds, moving buffer
           |
    <------+
    |
  'main': events 8-9
    |
    |   35 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (8) returning to 'main' from 'assignFrequency'
    |   36 |     assignFrequency(&tupleList, "tuple2", 10);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (9) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 10-16
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (10) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~  ~~~
           |      |                      |                   |
           |      |                      |                   (14) ...to here
           |      |                      (11) following 'true' branch...
           |   17 |         if(strcmp(tupleList->tuples[i].key, key) == 0) {
           |      |           ~       ~~~~~~~~~~~~~~~~~
           |      |           |                |
           |      |           |                (12) ...to here
           |      |           (13) following 'false' branch (when the strings are non-equal)...
           |......
           |   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                       | |
           |      |                       | (15) when 'realloc' fails
           |      |                       (16) 'tupleList.tuples' leaks here; was allocated at (6)
           |
collected_code_3/problem-114-1.c:24:44: warning: dereference of NULL '0' [CWE-476] [-Wanalyzer-null-dereference]
   24 |     tupleList->tuples[tupleList->size].key = malloc(strlen(key) + 1);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
  'main': event 1
    |
    |   30 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |
  'main': events 2-3
    |
    |   32 |     tupleList.tuples = NULL;
    |      |                      ^
    |      |                      |
    |      |                      (2) 'tupleList.tuples' is NULL
    |......
    |   35 |     assignFrequency(&tupleList, "tuple1", 5);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (3) calling 'assignFrequency' from 'main'
    |
    +--> 'assignFrequency': events 4-10
           |
           |   15 | void assignFrequency(TupleList* tupleList, char* key, int value) {
           |      |      ^~~~~~~~~~~~~~~
           |      |      |
           |      |      (4) entry to 'assignFrequency'
           |   16 |     for(int i = 0; i < tupleList->size; i++) {
           |      |                    ~~~~~~~~~~~~~~~~~~~
           |      |                      |
           |      |                      (5) following 'false' branch...
           |......
           |   23 |     tupleList->tuples = realloc(tupleList->tuples, (tupleList->size + 1) * sizeof(Tuple));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |                |                   |
           |      |                         |                |                   (6) ...to here
           |      |                         |                (7) 'tupleList.tuples' is NULL
           |      |                         (8) when 'realloc' fails
           |   24 |     tupleList->tuples[tupleList->size].key = malloc(strlen(key) + 1);
           |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                      |                     |
           |      |                      (9) '0' is NULL       (10) dereference of NULL '*tupleList.tuples + (long unsigned int)*tupleList.size * 16'
           |
