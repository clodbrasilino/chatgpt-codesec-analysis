collected_code_3/problem-15-2.c: In function 'split_string':
collected_code_3/problem-15-2.c:13:23: warning: dereference of possibly-NULL 'result' [CWE-690] [-Wanalyzer-possible-null-dereference]
   13 |             result[j] = &str[k];
      |             ~~~~~~~~~~^~~~~~~~~
  'split_string': events 1-6
    |
    |    8 |     char **result = malloc(sizeof(char *) * strlen(str));
    |      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (1) this call could return NULL
    |    9 | 
    |   10 |     for(i = 0; i < strlen(str); i++) {
    |      |                ~~~~~~~~~~~~~~~
    |      |                  |
    |      |                  (2) following 'true' branch...
    |   11 |         if(islower(str[i])) {
    |      |           ~           ~
    |      |           |           |
    |      |           |           (3) ...to here
    |      |           (4) following 'true' branch...
    |   12 |             str[i] = '\0';
    |      |                ~     
    |      |                |
    |      |                (5) ...to here
    |   13 |             result[j] = &str[k];
    |      |             ~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (6) 'result + (long unsigned int)j * 8' could be NULL: unchecked value from (1)
    |
collected_code_3/problem-15-2.c:18:15: warning: dereference of possibly-NULL 'result' [CWE-690] [-Wanalyzer-possible-null-dereference]
   18 |     result[j] = &str[k];
      |     ~~~~~~~~~~^~~~~~~~~
  'main': events 1-2
    |
    |   22 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   23 |     char str[] = "HelloWorldThisIsATest";
    |   24 |     char **result = split_string(str);
    |      |                     ~~~~~~~~~~~~~~~~~
    |      |                     |
    |      |                     (2) calling 'split_string' from 'main'
    |
    +--> 'split_string': events 3-5
           |
           |    6 | char **split_string(char *str) {
           |      |        ^~~~~~~~~~~~
           |      |        |
           |      |        (3) entry to 'split_string'
           |    7 |     int i, j = 0, k = 0;
           |    8 |     char **result = malloc(sizeof(char *) * strlen(str));
           |      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                     |
           |      |                     (4) this call could return NULL
           |......
           |   18 |     result[j] = &str[k];
           |      |     ~~~~~~~~~~~~~~~~~~~
           |      |               |
           |      |               (5) 'result + (long unsigned int)j * 8' could be NULL: unchecked value from (4)
           |
