In C, there are no built-in dictionary data structures like in Python or other high-level languages. However, we can use a struct to represent a student and an array of structs to represent multiple students. Here is a simple C program that filters students based on height and width:

```c
#include <stdio.h>

#define MAX_STUDENTS 100

typedef struct {
    int height;
    int width;
} Student;

void filter_students(Student students[], int n, int minHeight, int minWidth) {
    for(int i = 0; i < n; i++) {
        if(students[i].height >= minHeight && students[i].width >= minWidth) {
            printf("Student %d: Height = %d, Width = %d\n", i+1, students[i].height, students[i].width);
        }
    }
}

int main() {
    Student students[MAX_STUDENTS];
    int n;

    printf("Enter the number of students: ");
    scanf("%d", &n);

    for(int i = 0; i < n; i++) {
        printf("Enter height and width for student %d: ", i+1);
        scanf("%d%d", &students[i].height, &students[i].width);
    }

    int minHeight, minWidth;
    printf("Enter minimum height and width to filter: ");
    scanf("%d%d", &minHeight, &minWidth);

    filter_students(students, n, minHeight, minWidth);

    return 0;
}
```

This program first reads the number of students from the user, then reads the height and width for each student. It then reads the minimum height and width to use for filtering, and finally calls the `filter_students` function to print the students that meet the criteria.