Here is a C program that removes particular data type elements from a given array. In this case, we are removing integer type elements. Please note that C does not have a built-in tuple data type like Python. Therefore, we will use an array to simulate this. 

```c
#include <stdio.h>

#define SIZE 10

void remove_int_elements(int arr[], char char_arr[], int *size) {
    int i, j = 0;
    for(i = 0; i < *size; i++) {
        if(arr[i] != (int)arr[i]) {
            arr[j] = arr[i];
            char_arr[j] = char_arr[i];
            j++;
        }
    }
    *size = j;
}

int main() {
    int i, size = SIZE;
    int arr[SIZE] = {1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e'};
    char char_arr[SIZE] = {'1', 'a', '2', 'b', '3', 'c', '4', 'd', '5', 'e'};

    remove_int_elements(arr, char_arr, &size);

    for(i = 0; i < size; i++) {
        printf("%c ", char_arr[i]);
    }

    return 0;
}
```

This program will remove all integer elements from the array and print the remaining elements. The `remove_int_elements` function checks each element of the array to see if it is an integer. If it is not, it is copied to the new array. The size of the new array is then updated. The main function initializes the array and calls the `remove_int_elements` function. It then prints the elements of the new array.