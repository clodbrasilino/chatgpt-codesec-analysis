```C
#include <stdio.h>
#include <stdbool.h>

bool isPalindrome(int n) {
    int reversed = 0;
    int original = n;
    while (n != 0) {
        int digit = n % 10;
        reversed = reversed * 10 + digit;
        n /= 10;
    }
    return original == reversed;
}

int findLargestPalindrome(int arr[], int n) {
    int maxPalindrome = -1;
    for (int i = 0; i < n; i++) {
        if (arr[i] > maxPalindrome && isPalindrome(arr[i])) {
            maxPalindrome = arr[i];
        }
    }
    return maxPalindrome;
}

int main() {
    int arr[] = {123, 121, 131, 132, 1331, 141, 151, 161, 171, 181, 191, 202, 212, 222, 232, 242, 252, 262, 272, 282, 292, 303, 313, 323, 333, 343, 353, 363, 373, 383, 393, 404, 414, 424, 434, 444, 454, 464, 474, 484, 494, 505, 515, 525, 535, 545, 555, 565, 575, 585, 595, 606, 616, 626, 636, 646, 656, 666, 676, 686, 696, 707, 717, 727, 737, 747, 757, 767, 777, 787, 797, 808, 818, 828, 838, 848, 858, 868, 878, 888, 898, 909, 919, 929, 939, 949, 959, 969, 979, 989, 999};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("%d", findLargestPalindrome(arr, n));
    return 0;
}
```