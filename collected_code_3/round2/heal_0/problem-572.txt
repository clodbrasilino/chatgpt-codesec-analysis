```C
#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int data;
    struct node* next;
} Node;

Node* removeDuplicates(Node* head) {
    Node* current = head;
    Node* next_next;

    if (current == NULL)
        return NULL;

    while (current->next != NULL) {
        if (current->data == current->next->data) {
            next_next = current->next->next;
            free(current->next);
            current->next = next_next;
        }
        else {
            current = current->next;
        }
    }
    return head;
}

void push(Node** head_ref, int new_data) {
    Node* new_node = (Node*)malloc(sizeof(Node));
    new_node->data = new_data;
    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

void printList(Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
}

int main() {
    Node* head = NULL;

    push(&head, 20);
    push(&head, 13);
    push(&head, 13);
    push(&head, 11);
    push(&head, 11);
    push(&head, 11);

    printf("\n List before removal of duplicates ");
    printList(head);

    removeDuplicates(head);

    printf("\n List after removal of duplicates ");
    printList(head);

    return 0;
}
```