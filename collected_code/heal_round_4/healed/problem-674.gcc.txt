collected_code/heal_round_4/healed/problem-674.c: In function 'removeDuplicates':
collected_code/heal_round_4/healed/problem-674.c:40:32: warning: stack-based buffer overflow [CWE-121] [-Wanalyzer-out-of-bounds]
   40 |         string[MAX_WORD_LEN-1] = '\0';
      |         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
  'main': events 1-3
    |
    |   45 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   46 |     char str[] = "This is a test test string to test remove duplicate duplicate words";
    |      |          ~~~
    |      |          |
    |      |          (2) capacity: 68 bytes
    |   47 |     removeDuplicates(str);
    |      |     ~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (3) calling 'removeDuplicates' from 'main'
    |
    +--> 'removeDuplicates': events 4-6
           |
           |    8 | void removeDuplicates(char *string) {
           |      |      ^~~~~~~~~~~~~~~~
           |      |      |
           |      |      (4) entry to 'removeDuplicates'
           |......
           |   12 |     if(temp == NULL) {
           |      |       ~
           |      |       |
           |      |       (5) following 'false' branch (when 'temp' is non-NULL)...
           |......
           |   17 |     char *word = strtok(string, " ");
           |      |                  ~~~~~~~~~~~~~~~~~~~
           |      |                  |
           |      |                  (6) ...to here
           |
         'removeDuplicates': events 7-11
           |
           |   18 |     while (word != NULL && wordCount < MAX_WORDS) {
           |      |                         ^
           |      |                         |
           |      |                         (7) following 'true' branch (when 'wordCount <= 99')...
           |   19 |         int exists = 0;
           |      |             ~~~~~~       
           |      |             |
           |      |             (8) ...to here
           |   20 |         for (int i = 0; i < wordCount; i++) {
           |      |                         ~~~~~~~~~~~~~
           |      |                           |
           |      |                           (9) following 'false' branch (when 'i >= wordCount')...
           |......
           |   26 |         if (!exists) {
           |      |            ~             
           |      |            |
           |      |            (10) ...to here
           |      |            (11) following 'true' branch (when 'exists == 0')...
           |
         'removeDuplicates': event 12
           |
           |   27 |             strncpy(wordArray[wordCount], word, MAX_WORD_LEN-1);
           |      |                     ~~~~~~~~~^~~~~~~~~~~
           |      |                              |
           |      |                              (12) ...to here
           |
         'removeDuplicates': event 13
           |
           |   34 |     if(wordCount > 0) {
           |      |       ^
           |      |       |
           |      |       (13) following 'true' branch (when 'wordCount > 0')...
           |
         'removeDuplicates': event 14
           |
           |   35 |         snprintf(temp, MAX_WORD_LEN, "%s", wordArray[0]);
           |      |         ^~~~~~~~
           |      |         |
           |      |         (14) ...to here
           |
         'removeDuplicates': event 15
           |
           |   36 |         for (int i = 1; i < wordCount; i++) {
           |      |                         ~~^~~~~~~~~~~
           |      |                           |
           |      |                           (15) following 'false' branch (when 'i >= wordCount')...
           |
         'removeDuplicates': event 16
           |
           |   39 |         strncpy(string, temp, MAX_WORD_LEN-1);
           |      |         ^~~~~~~
           |      |         |
           |      |         (16) ...to here
           |
         'removeDuplicates': event 17
           |
           |   40 |         string[MAX_WORD_LEN-1] = '\0';
           |      |         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
           |      |                                |
           |      |                                (17) out-of-bounds write at byte 255 but 'str' ends at byte 68
           |
collected_code/heal_round_4/healed/problem-674.c:40:32: note: write of 1 byte to beyond the end of 'str'
collected_code/heal_round_4/healed/problem-674.c:40:32: note: valid subscripts for 'str' are '[0]' to '[67]'
-macosx_version_min has been renamed to -macos_version_min
