collected_code_3/problem-444-1.c: In function 'trimTuple':
collected_code_3/problem-444-1.c:15:24: warning: dereference of possibly-NULL 'trimmedTuple' [CWE-690] [-Wanalyzer-possible-null-dereference]
   15 |     trimmedTuple->size = tuple->size - k;
      |     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
  'trimTuple': events 1-4
    |
    |   10 |     if (k >= tuple->size) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |   14 |     Tuple *trimmedTuple = (Tuple*) malloc(sizeof(Tuple));
    |      |                                    ~~~~~~~~~~~~~~~~~~~~~
    |      |                                    |
    |      |                                    (2) ...to here
    |      |                                    (3) this call could return NULL
    |   15 |     trimmedTuple->size = tuple->size - k;
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (4) 'trimmedTuple' could be NULL: unchecked value from (3)
    |
collected_code_3/problem-444-1.c:19:35: warning: dereference of possibly-NULL '*trimmedTuple.elements + (long unsigned int)i * 4' [CWE-690] [-Wanalyzer-possible-null-dereference]
   19 |         trimmedTuple->elements[i] = tuple->elements[i];
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  'trimTuple': events 1-6
    |
    |   10 |     if (k >= tuple->size) {
    |      |        ^
    |      |        |
    |      |        (1) following 'false' branch...
    |......
    |   14 |     Tuple *trimmedTuple = (Tuple*) malloc(sizeof(Tuple));
    |      |                                    ~~~~~~~~~~~~~~~~~~~~~
    |      |                                    |
    |      |                                    (2) ...to here
    |   15 |     trimmedTuple->size = tuple->size - k;
    |   16 |     trimmedTuple->elements = (int*) malloc(trimmedTuple->size * sizeof(int));
    |      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                     |
    |      |                                     (3) this call could return NULL
    |   17 | 
    |   18 |     for (int i = 0; i < trimmedTuple->size; i++) {
    |      |                     ~~~~~~~~~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (4) following 'true' branch...
    |   19 |         trimmedTuple->elements[i] = tuple->elements[i];
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                                   |      |
    |      |                                   |      (5) ...to here
    |      |                                   (6) '*trimmedTuple.elements + (long unsigned int)i * 4' could be NULL: unchecked value from (3)
    |
collected_code_3/problem-444-1.c: In function 'main':
collected_code_3/problem-444-1.c:33:27: warning: dereference of possibly-NULL 'tuple.elements' [CWE-690] [-Wanalyzer-possible-null-dereference]
   33 |         tuple.elements[i] = i + 1;
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   30 |     tuple.elements = (int*) malloc(size * sizeof(int));
    |      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                             |
    |      |                             (1) this call could return NULL
    |   31 | 
    |   32 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~ 
    |      |                       |
    |      |                       (2) following 'true' branch (when 'i < size')...
    |   33 |         tuple.elements[i] = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |              |            |
    |      |              |            (4) 'tuple.elements + (long unsigned int)i * 4' could be NULL: unchecked value from (1)
    |      |              (3) ...to here
    |
