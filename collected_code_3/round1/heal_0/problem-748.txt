C language does not have built-in support for regular expressions. However, we can use the POSIX regex library in C. Here is a simple program that uses regex to find words starting with capital letters and adds spaces before them.

```c
#include <stdio.h>
#include <string.h>
#include <regex.h>

void add_spaces(char *str) {
    regex_t regex;
    regmatch_t match[2];
    char new_str[256] = "";
    char *ptr = str;

    regcomp(&regex, "[A-Z][a-z]*", REG_EXTENDED);

    while (regexec(&regex, ptr, 2, match, 0) == 0) {
        strncat(new_str, ptr, match[0].rm_so);
        strcat(new_str, " ");
        strncat(new_str, ptr + match[0].rm_so, match[0].rm_eo - match[0].rm_so);
        ptr += match[0].rm_eo;
    }

    strcat(new_str, ptr);
    strcpy(str, new_str);

    regfree(&regex);
}

int main() {
    char str[] = "HelloWorldThisIsATest";
    add_spaces(str);
    printf("%s\n", str);
    return 0;
}
```

This program will output: "Hello World This Is A Test". It works by repeatedly applying the regex to the string, and each time it finds a match, it copies the part of the string before the match, a space, and the match itself to the new string. It then continues searching from the end of the match. Finally, it copies the remainder of the string after the last match to the new string.