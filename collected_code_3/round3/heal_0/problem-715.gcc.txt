collected_code_3/problem-715-3.c: In function 'string_to_tuple':
collected_code_3/problem-715-3.c:24:23: warning: dereference of possibly-NULL 'tuple.data' [CWE-690] [-Wanalyzer-possible-null-dereference]
   24 |         tuple.data[i] = atoi(token);
      |         ~~~~~~~~~~~~~~^~~~~~~~~~~~~
  'string_to_tuple': event 1
    |
    |   20 |     tuple.data = (int *)malloc(tuple.size * sizeof(int));
    |      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                         |
    |      |                         (1) this call could return NULL
    |
  'string_to_tuple': events 2-4
    |
    |   23 |     for (int i = 0; token != NULL; i++) {
    |      |                           ^
    |      |                           |
    |      |                           (2) following 'true' branch (when 'token' is non-NULL)...
    |   24 |         tuple.data[i] = atoi(token);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |              |        |
    |      |              |        (4) 'tuple.data + (long unsigned int)i * 4' could be NULL: unchecked value from (1)
    |      |              (3) ...to here
    |
collected_code_3/problem-715-3.c: In function 'main':
collected_code_3/problem-715-3.c:37:9: warning: use of uninitialized value '*_1 + _3' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   37 |         printf("%d", tuple.data[i]);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   31 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   32 |     char str[] = "1,2,3,4,5";
    |   33 |     Tuple tuple = string_to_tuple(str);
    |      |                   ~~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (2) calling 'string_to_tuple' from 'main'
    |
    +--> 'string_to_tuple': events 3-8
           |
           |   10 | Tuple string_to_tuple(char *str) {
           |      |       ^~~~~~~~~~~~~~~
           |      |       |
           |      |       (3) entry to 'string_to_tuple'
           |   11 |     int count = 0;
           |   12 |     for (int i = 0; str[i]; i++) {
           |      |                     ~~~     ~~~
           |      |                     |        |
           |      |                     |        (7) ...to here
           |      |                     (4) following 'true' branch...
           |   13 |         if (str[i] == ',') {
           |      |            ~   ~
           |      |            |   |
           |      |            |   (5) ...to here
           |      |            (6) following 'false' branch...
           |......
           |   20 |     tuple.data = (int *)malloc(tuple.size * sizeof(int));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |
           |      |                         (8) region created on heap here
           |
         'string_to_tuple': events 9-10
           |
           |   23 |     for (int i = 0; token != NULL; i++) {
           |      |                           ^
           |      |                           |
           |      |                           (9) following 'false' branch (when 'token' is NULL)...
           |......
           |   28 |     return tuple;
           |      |            ~~~~~           
           |      |            |
           |      |            (10) ...to here
           |
    <------+
    |
  'main': events 11-14
    |
    |   33 |     Tuple tuple = string_to_tuple(str);
    |      |                   ^~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (11) returning to 'main' from 'string_to_tuple'
    |......
    |   36 |     for (int i = 0; i < tuple.size; i++) {
    |      |                     ~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (12) following 'true' branch...
    |   37 |         printf("%d", tuple.data[i]);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                 |
    |      |         |                 (13) ...to here
    |      |         (14) use of uninitialized value '*_1 + _3' here
    |
collected_code_3/problem-715-3.c:37:9: warning: dereference of possibly-NULL 'tuple.data' [CWE-690] [-Wanalyzer-possible-null-dereference]
   37 |         printf("%d", tuple.data[i]);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-2
    |
    |   31 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |   32 |     char str[] = "1,2,3,4,5";
    |   33 |     Tuple tuple = string_to_tuple(str);
    |      |                   ~~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (2) calling 'string_to_tuple' from 'main'
    |
    +--> 'string_to_tuple': events 3-8
           |
           |   10 | Tuple string_to_tuple(char *str) {
           |      |       ^~~~~~~~~~~~~~~
           |      |       |
           |      |       (3) entry to 'string_to_tuple'
           |   11 |     int count = 0;
           |   12 |     for (int i = 0; str[i]; i++) {
           |      |                     ~~~     ~~~
           |      |                     |        |
           |      |                     |        (7) ...to here
           |      |                     (4) following 'true' branch...
           |   13 |         if (str[i] == ',') {
           |      |            ~   ~
           |      |            |   |
           |      |            |   (5) ...to here
           |      |            (6) following 'false' branch...
           |......
           |   20 |     tuple.data = (int *)malloc(tuple.size * sizeof(int));
           |      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |                         |
           |      |                         (8) this call could return NULL
           |
         'string_to_tuple': events 9-10
           |
           |   23 |     for (int i = 0; token != NULL; i++) {
           |      |                           ^
           |      |                           |
           |      |                           (9) following 'false' branch (when 'token' is NULL)...
           |......
           |   28 |     return tuple;
           |      |            ~~~~~           
           |      |            |
           |      |            (10) ...to here
           |
    <------+
    |
  'main': events 11-14
    |
    |   33 |     Tuple tuple = string_to_tuple(str);
    |      |                   ^~~~~~~~~~~~~~~~~~~~
    |      |                   |
    |      |                   (11) returning to 'main' from 'string_to_tuple'
    |......
    |   36 |     for (int i = 0; i < tuple.size; i++) {
    |      |                     ~~~~~~~~~~~~~~
    |      |                       |
    |      |                       (12) following 'true' branch...
    |   37 |         printf("%d", tuple.data[i]);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |                 |
    |      |         |                 (13) ...to here
    |      |         (14) 'tuple.data + (long unsigned int)i * 4' could be NULL: unchecked value from (8)
    |
