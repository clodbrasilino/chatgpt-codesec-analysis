collected_code/problem-585-0.c: In function 'heapify':
collected_code/problem-585-0.c:23:33: warning: use of uninitialized value '*arr_33(D) + _4.price' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   23 |     if (left < size && arr[left].price > arr[largest].price)
      |                        ~~~~~~~~~^~~~~~
  'main': events 1-5
    |
    |   46 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   55 |     Item* arr = (Item*)malloc(size * sizeof(Item));
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (2) region created on heap here
    |   56 | 
    |   57 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (3) following 'false' branch...
    |......
    |   63 |     findExpensiveItems(arr, n, size);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (4) ...to here
    |      |     (5) calling 'findExpensiveItems' from 'main'
    |
    +--> 'findExpensiveItems': events 6-9
           |
           |   36 | void findExpensiveItems(Item arr[], int n, int size) {
           |      |      ^~~~~~~~~~~~~~~~~~
           |      |      |
           |      |      (6) entry to 'findExpensiveItems'
           |   37 |     for (int i = n / 2 - 1; i >= 0; i--)
           |      |                             ~~~~~~
           |      |                               |
           |      |                               (7) following 'true' branch (when 'i >= 0')...
           |   38 |         heapify(arr, size, i);
           |      |         ~~~~~~~~~~~~~~~~~~~~~
           |      |         |
           |      |         (8) ...to here
           |      |         (9) calling 'heapify' from 'findExpensiveItems'
           |
           +--> 'heapify': events 10-13
                  |
                  |   18 | void heapify(Item arr[], int size, int i) {
                  |      |      ^~~~~~~
                  |      |      |
                  |      |      (10) entry to 'heapify'
                  |......
                  |   23 |     if (left < size && arr[left].price > arr[largest].price)
                  |      |        ~               ~~~~~~~~~~~~~~~
                  |      |        |                  |     |
                  |      |        |                  |     (13) use of uninitialized value '*arr_33(D) + _4.price' here
                  |      |        |                  (12) ...to here
                  |      |        (11) following 'true' branch (when 'left < size')...
                  |
collected_code/problem-585-0.c:26:35: warning: use of uninitialized value '*arr_33(D) + _12.price' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   26 |     if (right < size && arr[right].price > arr[largest].price)
      |                         ~~~~~~~~~~^~~~~~
  'main': events 1-5
    |
    |   46 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   55 |     Item* arr = (Item*)malloc(size * sizeof(Item));
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (2) region created on heap here
    |   56 | 
    |   57 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (3) following 'false' branch...
    |......
    |   63 |     findExpensiveItems(arr, n, size);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (4) ...to here
    |      |     (5) calling 'findExpensiveItems' from 'main'
    |
    +--> 'findExpensiveItems': events 6-9
           |
           |   36 | void findExpensiveItems(Item arr[], int n, int size) {
           |      |      ^~~~~~~~~~~~~~~~~~
           |      |      |
           |      |      (6) entry to 'findExpensiveItems'
           |   37 |     for (int i = n / 2 - 1; i >= 0; i--)
           |      |                             ~~~~~~
           |      |                               |
           |      |                               (7) following 'true' branch (when 'i >= 0')...
           |   38 |         heapify(arr, size, i);
           |      |         ~~~~~~~~~~~~~~~~~~~~~
           |      |         |
           |      |         (8) ...to here
           |      |         (9) calling 'heapify' from 'findExpensiveItems'
           |
           +--> 'heapify': events 10-15
                  |
                  |   18 | void heapify(Item arr[], int size, int i) {
                  |      |      ^~~~~~~
                  |      |      |
                  |      |      (10) entry to 'heapify'
                  |......
                  |   23 |     if (left < size && arr[left].price > arr[largest].price)
                  |      |        ~
                  |      |        |
                  |      |        (11) following 'false' branch (when 'left >= size')...
                  |......
                  |   26 |     if (right < size && arr[right].price > arr[largest].price)
                  |      |        ~                ~~~~~~~~~~~~~~~~
                  |      |        |                   |      |
                  |      |        |                   |      (15) use of uninitialized value '*arr_33(D) + _12.price' here
                  |      |        (12) ...to here     (14) ...to here
                  |      |        (13) following 'true' branch (when 'right < size')...
                  |
collected_code/problem-585-0.c: In function 'findExpensiveItems':
collected_code/problem-585-0.c:41:9: warning: use of uninitialized value '*arr_20(D) + _3.price' [CWE-457] [-Wanalyzer-use-of-uninitialized-value]
   41 |         printf("Item index: %d, Price: %d\n", arr[i].index, arr[i].price);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  'main': events 1-5
    |
    |   46 | int main() {
    |      |     ^~~~
    |      |     |
    |      |     (1) entry to 'main'
    |......
    |   55 |     Item* arr = (Item*)malloc(size * sizeof(Item));
    |      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (2) region created on heap here
    |   56 | 
    |   57 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (3) following 'false' branch...
    |......
    |   63 |     findExpensiveItems(arr, n, size);
    |      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |     |
    |      |     (4) ...to here
    |      |     (5) calling 'findExpensiveItems' from 'main'
    |
    +--> 'findExpensiveItems': events 6-9
           |
           |   36 | void findExpensiveItems(Item arr[], int n, int size) {
           |      |      ^~~~~~~~~~~~~~~~~~
           |      |      |
           |      |      (6) entry to 'findExpensiveItems'
           |......
           |   40 |     for (int i = size - 1; i >= size - n; i--) {
           |      |                            ~~~~~~~~~~~~~
           |      |                              |
           |      |                              (7) following 'true' branch...
           |   41 |         printf("Item index: %d, Price: %d\n", arr[i].index, arr[i].price);
           |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           |      |         |                                                      |
           |      |         |                                                      (8) ...to here
           |      |         (9) use of uninitialized value '*arr_20(D) + _3.price' here
           |
collected_code/problem-585-0.c: In function 'main':
collected_code/problem-585-0.c:60:22: warning: dereference of possibly-NULL 'arr' [CWE-690] [-Wanalyzer-possible-null-dereference]
   60 |         arr[i].index = i + 1;
      |         ~~~~~~~~~~~~~^~~~~~~
  'main': events 1-4
    |
    |   55 |     Item* arr = (Item*)malloc(size * sizeof(Item));
    |      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |                        |
    |      |                        (1) this call could return NULL
    |   56 | 
    |   57 |     for (int i = 0; i < size; i++) {
    |      |                     ~~~~~~~~
    |      |                       |
    |      |                       (2) following 'true' branch...
    |   58 |         printf("Enter price for item %d: ", i + 1);
    |      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |      |         |
    |      |         (3) ...to here
    |   59 |         scanf("%d", &arr[i].price);
    |   60 |         arr[i].index = i + 1;
    |      |         ~~~~~~~~~~~~~~~~~~~~
    |      |                      |
    |      |                      (4) 'arr + (long unsigned int)i * 8' could be NULL: unchecked value from (1)
    |
